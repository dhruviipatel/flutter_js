/*v1.136.0	 	rev #d8b038c, built on 2024-03-01 13:02:35*/
var websdk_core = function (e) {
    "use strict"; const a = () => { for (var e = 0; e < document.scripts.length; e++) { var t = document.scripts[e], n = -1 < t.src.lastIndexOf("/safecharge.js") ? t.src.lastIndexOf("/safecharge.js") : t.src.lastIndexOf("/websdk.js"); if (-1 < n) return t.src.substr(0, n + 1) } }; return e.blockCardsChecker = (e, t) => { var n = []; return e.forEach(function (e) { e = Array.isArray(e) ? e : [e]; -1 === e.map(function (e) { e = e.toLocaleLowerCase(); return t.brand && e === t.brand.toLocaleLowerCase() || t.cardType && e === t.cardType.toLocaleLowerCase() || t.issuerCountry && e === t.issuerCountry.toLocaleLowerCase() || t.cardProduct && e === t.cardProduct.toLocaleLowerCase() || !0 === t.isPrepaid && "prepaid" === e }).indexOf(!1) && (n = n.concat(e)) }), !!n.length && n }, e.findSfcHost = a, e.inject3Dmodal = e => {
        var t; (function (e) {
            let t = document.createElement("div"); t.id = e, t.style.cssText = "display: display; overflow: auto; position: fixed; z-index: 9999; outline: 0px; background-color: rgba(210, 204, 204, 0.5); top: 0px; right: 0px; left: 0px; bottom: 0px;", t.innerHTML = `<div class="sfcModal-dialog">
        <div class="sfcModal-content" style="position:relative;background-color:#fff;background-clip:padding-box;outline:0;border:1px solid #dfdfdf;">
            <div class="sfcModal-header">
                <a role="button" data-dismiss="modal" aria-label="Close" class="sfcIcon--close sfcModal-close"></a>
            </div>
            <div class="sfcModal-body" style="-webkit-overflow-scrolling: touch;">
            </div>
        </div>
    </div>`, document.body.appendChild(t)
        })
            (e), document.getElementById(e).style.display = "block", setTimeout(function () { document.getElementById(e).classList.add("is-in") }, 300);
        var n = document.createElement("iframe"), r = "NuveiIrame"; n.setAttribute("id", "ifrm"), n.style.cssText = "height: 420px;border: none !important; margin: 0 !important;padding: 0 !important;width: 1px !important;min-width: 100% !important;overflow: hidden !important;display: block !important;", n.setAttribute("name", r), n.setAttribute("src", a() + "preloader.html?" + (new Date).getTime()); var o = document.getElementsByClassName("sfcModal-body")[0]; return null == (t = null == o ? void 0 : o.parentNode) || t.insertBefore(n, o), r
    }, e.loadJS = e => { var t = document.createElement("script"); t.type = "text/javascript", t.src = e, t.crossOrigin = "anonymous", t.setAttribute("id", "dynatraceScript"), document.head.appendChild(t) }, e.loadScript = (e, t) => { var n = document.createElement("script"); n.type = "text/javascript", n.crossOrigin = "anonymous", n.onload = function () { t() }, n.src = e, document.head.appendChild(n) }, e.onPaymentEvent = (e, t, n, r, o) => { "function" == typeof t && ("paymentStarted" === e.eventType && e.threeD && "true" === r && !n && (e.threeD.flow = "frictionless"), o && (e.pm = o), t(e)) }, Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }),
        e
}({}); String.prototype.startsWith || Object.defineProperty(String.prototype, "startsWith", { value: function (e, t) { return this.substring(t = !t || t < 0 ? 0 : +t, t + e.length) === e } }), "function" != typeof Object.assign && Object.defineProperty(Object, "assign", { value: function (e, t) { "use strict"; if (null == e) throw new TypeError("Cannot convert undefined or null to object"); for (var n = Object(e), r = 1; r < arguments.length; r++) { var o = arguments[r]; if (null != o) for (var a in o) Object.prototype.hasOwnProperty.call(o, a) && (n[a] = o[a]) } return n }, writable: !0, configurable: !0 }),
    "NodeList" in window && !NodeList.prototype.forEach && (NodeList.prototype.forEach = function (e, t) { t = t || window; for (var n = 0; n < this.length; n++)e.call(t, this[n], n, this) }), "function" != typeof Object.assign && (Object.assign = function (e, t) { "use strict"; if (null == e) throw new TypeError("Cannot convert undefined or null to object"); for (var n = Object(e), r = 1; r < arguments.length; r++) { var o = arguments[r]; if (null != o) for (var a in o) Object.prototype.hasOwnProperty.call(o, a) && (n[a] = o[a]) } return n }), Array.prototype.find || (Array.prototype.find = function (e) { if (null == this) throw new TypeError("Array.prototype.find called on null or undefined"); if ("function" != typeof e) throw new TypeError("predicate must be a function"); for (var t, n = Object(this), r = n.length >>> 0, o = arguments[1], a = 0; a < r; a++)if (t = n[a], e.call(o, t, a, n)) return t }), function () {
        function e() { null != this.parentNode && this.parentNode.removeChild(this) }
        for (var t = ["DocumentType", "Element", "CharacterData"], n = 0; n < t.length; n++) { var r = t[n]; window[r] && !window[r].prototype.remove && (window[r].prototype.remove = e) }
    }(), function (e) {
        e.ulog = function () {
            "use strict"; var r, o, a, i; function s(e) { return e ? i[e] ? i[e] : i[e] = n({ name: e }, s) : s.debug ? s : n(s) } s.ulog = { version: "1.1.0" }, s.enable = function (e) { var t, n = (e || "").split(/[\s,]+/); for (t = 0; t < n.length; t++)if (n[t]) { e = n[t].replace(/\*/g, ".*?"); if (e[0] === "-") r.push(new RegExp("^" + e.substr(1) + "$")); else o.push(new RegExp("^" + e + "$")) } for (t in i) p(i[t]) }, s.enabled = function (e) { var t; for (t = 0; t < r.length; t++)if (r[t].test(e)) return; for (t = 0; t < o.length; t++)if (o[t].test(e)) return true }, s.disable = s.enable.bind(s, ""); var t = { ERROR: 1, WARN: 2, INFO: 3, LOG: 4, DEBUG: 5, TRACE: 6 }, c = Object.keys(t).map(function (e) { return e.toLowerCase() }), i = {}, o = [], r = []; function n(n, r, o) { n.NONE = 0; for (var e in t) n[e] = t[e]; Object.defineProperty(n, "level", { get: function () { return o !== undefined ? o : r && r.level }, set: function (e) { if (e === undefined && r) o = undefined; else { var t = e && (Number(e) !== Number(e) ? n[e.toUpperCase()] : Number(e)); if (t >= 0 && t <= 6) o = t } p(n); if (!r) for (a in i) p(i[a]) } }); p(n, r); n.dir = d("dir") || l; n.table = d("table") || l; n.time = d("time") || l; n.timeEnd = d("timeEnd") || l; n.assert = typeof window == "object" && d("assert") || function () { var e = [].concat.apply([], arguments), t = e.shift(); if (!t) n.error.apply(n, e) }; return n } function p(e) {
                var t = Math.max(e.name && s.enabled(e.name) && e.DEBUG || e.level, e.level);
                for (var n = 0, r; r = c[n]; n++)e[r] = t <= n ? l : d(r) || typeof print == "function" && print || l
            } function d(e, t) { return (t = s.con()) && (t[e] || t.log).bind(t) } function l() { } var e = location.search.substring(1), m = e && e.split("&"), u, y, h, f; try { u = localStorage.getItem("log"); y = localStorage.getItem("debug") } catch (e) { } for (h = 0; f = m && m[h] && m[h].split("="); h++) { f[0] == "log" ? u = f[1] : 0; f[0] == "debug" ? y = f[1] : 0 } s.con = function () { return window.console && console }, y && s.enable(y); var v = s(); return s.level = u || s.WARN, v
        }()
    }(this); var applePay = function () { }, session = null, mapApplePayDetailsToNuveiApi = function (e, t) { return void 0 === t && (t = {}), void 0 === (e = void 0 === e ? {} : e).addressLines && (e.addressLines = []), void 0 === t.addressLines && (t.addressLines = []), { firstName: e.givenName || t.givenName, lastName: e.familyName || t.familyName, country: e.countryCode || t.countryCode, email: e.emailAddress || t.emailAddress, address: e.addressLines[0] || t.addressLines[0], addressLine2: e.addressLines[1] || t.addressLines[1], phone: e.phoneNumber || t.phoneNumber, zip: e.postalCode || t.postalCode, city: e.locality || t.locality, state: e.administrativeArea || t.administrativeArea } }; function toCSS(e, i) {
        var h = {}; function f(e, t, n) { "number" != typeof n || i.useRawValues || (n += "px"); for (var r = t.split(/\s*,\s*/), o = 0; o < r.length; o++) { var a = r[o].replace(/_/g, "-"); h[e][a] ? h[e][a].push(n) : h[e][a] = [n] } }
        if ("string" == typeof e) return "/*\nUnable to parse JSS: " + e + "\n*/"; !function e(t, n) { for (var r in t && !h[t] && (h[t] = {}), n) { var o = n[r]; if (o instanceof Array) for (var a = o, i = 0; i < a.length; i++)f(t, r, a[i]); else switch (typeof o) { case "number": case "string": f(t, r, o); break; case "object": var s = r.charAt(r.length - 1); if (!t || "_" !== s && "-" !== s) e(function (e, t) { for (var n = [], r = t.split(/\s*,\s*/), o = e.split(/\s*,\s*/), a = 0; a < o.length; a++)for (var i = o[a], s = 0; s < r.length; s++) { var c = r[s]; "&" === c.charAt(0) ? n.push(i + c.substr(1)) : n.push(i ? i + " " + c : c) } return n.join(", ") }(t, r), o); else { var c, p = o; for (c in p) for (var d = c.split(/\s*,\s*/), l = 0; l < d.length; l++) { var m = p[c]; if (m instanceof Array) for (var u = m, y = 0; y < u.length; y++)f(t, r + d[l], u[y]); else f(t, r + d[l], p[c]) } } } } }("", e); var t, n = ""; for (t in h) { var r, o = h[t]; for (r in n += t + " {\n", o) for (var a = o[r], s = 0; s < a.length; s++)n += "\t" + r + ": " + a[s] + ";\n"; n += "}\n" } return n
    } applePay.prototype.buildSession = function (e, n, t) {
        this.request = e, this.request.supportedNetworks = e.supportedNetworks || ["amex", "chinaUnionPay", "privateLabel", "discover", "visa", "masterCard", "jcb"], this.request.merchantCapabilities = e.merchantCapabilities || ["supports3DS", "supportsCredit", "supportsDebit"]; var i = e.server, s = this.request.merchantSiteId; "true" === e.collectUserDetails && (this.request.requiredBillingContactFields = ["postalAddress", "name", "phone", "email"], this.request.requiredShippingContactFields = ["postalAddress", "name", "phone", "email"]), delete e.collectUserDetails; e = 1; ApplePaySession.supportsVersion(3) ? e = 3 : ApplePaySession.supportsVersion(2) ? e = 2 : ApplePaySession.supportsVersion(4) && (e = 4), delete this.request.server, delete this.request.merchantSiteId, session = new ApplePaySession(e, this.request); return session.onvalidatemerchant = function (e) {
            var r, o, a; r = e.validationURL, o = s, a = "/ppp/getAppleValidationApiFlow.do",
                new Promise(function (t, e) { var n = new XMLHttpRequest; n.onload = function () { var e = JSON.parse(this.responseText); t(e.appleResponse) }, n.onerror = e, n.timeout = 3e4, n.ontimeout = e, n.open("GET", [i, a, "?merchant_site_id=", o, "&validationUrl=", r, "&ts=", (new Date).getTime()].join("")), n.send() }).then(function (e) { session.completeMerchantValidation(e) }).catch(function (e) { session.completeMerchantValidation(e) })
        }, session.onpaymentauthorized = function (e) { var t = { token: e.payment.token }; e.payment.billingContact && (t.billingContact = e.payment.billingContact), e.payment.shippingContact && (t.shippingContact = e.payment.shippingContact), t.shippingAndBillingDetails = mapApplePayDetailsToNuveiApi(t.shippingContact, t.billingContact), n(t, function (e, t) { t = t || []; t = { status: e ? ApplePaySession.STATUS_SUCCESS : ApplePaySession.STATUS_FAILURE, errors: t }; session.completePayment(t) }) }, session.oncancel = function (e) { e = { status: "canceled", errors: e ? ApplePaySession.STATUS_SUCCESS : ApplePaySession.STATUS_FAILURE }; t(e) }, this
    },
        applePay.prototype.completePayment = function (e) { session.completePayment(e) }, applePay.prototype.abort = function (e) { e = { status: "abort", errors: e ? ApplePaySession.STATUS_SUCCESS : ApplePaySession.STATUS_FAILURE }; applePayCallback(e), session.abort() }; var defaults = { truncateFirst: !(applePay.prototype.begin = function () { var t = this; this.oncancel && (session.oncancel = function (e) { t.oncancel(e) }), session.begin() }), container: null, containerName: "injectCSSContainer", useRawValues: !1, media: "all" }; function injectCSS(e, t) { var n = (t = Object.assign(defaults, t)).container || document.getElementById(t.containerName); n || (r = document.head || document.getElementsByTagName("head")[0], (o = document.createElement("style")).type = "text/css", o.id = t.containerName, o.media = t.media, r.appendChild(o), n = document.getElementById(t.containerName)); var r = void 0 !== n.styleSheet && void 0 !== n.styleSheet.cssText, o = ""; return t.truncateFirst || (o += r ? n.styleSheet.cssText : n.textContent), o += toCSS(e, t), r ? n.styleSheet.cssText = o : n.textContent = o, n } var generateStyles = function () { "use strict"; var i = ["fontSmoothing"]; function s(e, t, n) { var r, o = {}; for (r in o[t] = {}, n) { var a = getRule(r); o[t][a] = n[r] } return o } return function (e, t) { var n, r, o = { base: "", empty: ".empty", valid: ".valid", invalid: ".invalid" }, a = {}; for (n in t) void 0 !== o[n] && (r = function (t, n) { var r, o = {}; for (r in o[t] = {}, n) { var e, a = getRule(r); "string" == typeof a && a.startsWith(":") ? (e = s(0, t + a, n[r]), Object.assign(o, e)) : -1 < i.indexOf(r) ? a.map(function (e) { o[t][e] = n[r] }) : "object" == typeof a && n[r] ? a.map(function (e) { e = s(0, e, n[r]); Object.assign(o, e) }) : a && (o[t][a] = n[r]) } return o }((e + { base: "", empty: ".empty", valid: ".valid", invalid: ".invalid" }[n]).trim(), t[n]), Object.assign(a, r)); return a } }(); function objectToCSS(n) { return Object.keys(n).map(e => { var t = n[e]; return `${getRule(e)}: ${t}` }).join(";") } function getRule(e) { return { color: "color", fontFamily: "font-family", fontSize: "font-size", fontSmoothing: ["font-smooth", "-webkit-font-smoothing", "-moz-osx-font-smoothing"], "-webkit-font-smoothing": "-webkit-font-smoothing", "-moz-osx-font-smoothing": "-moz-osx-font-smoothing", fontStyle: "font-style", fontVariant: "font-variant", fontWeight: "font-weight", lineHeight: "line-height", letterSpacing: "letter-spacing", textAlign: "text-align", textDecoration: "text-decoration", textShadow: "text-shadow", textTransform: "text-transform", "::placeholder": ["::-webkit-input-placeholder", "::-moz-placeholder", ":-ms-input-placeholder", ":-moz-placeholder"], "::selection": ["::selection", "::-moz-selection"], "::-ms-clear": ["::-ms-clear"], ":-webkit-autofill": ":-webkit-autofill", ":disabled": ":disabled", ":focus": ":focus", ":hover": ":hover", border: "border", borderRadius: "border-radius", opacity: "opacity", display: "display", width: "width", boxSizing: "box-sizing", alignItems: "align-items", margin: "margin", maxWidth: "max-width", minWidth: "min-width", flexWrap: "flex-wrap", flexDirection: "flex-direction", height: "height", backgroundColor: "background-color", outline: "outline", cursor: "cursor", zIndex: "z-index", position: "position", top: "top", left: "left", float: "float", clear: "clear", visibility: "visibility", padding: "padding", overflow: "overflow" }[e] }
var UUIDjs = function () {
    "use strict"; function s() { } return s.limitUI04 = (s.maxFromBits = function (e) { return Math.pow(2, e) })(4), s.limitUI06 = s.maxFromBits(6), s.limitUI08 = s.maxFromBits(8), s.limitUI12 = s.maxFromBits(12), s.limitUI14 = s.maxFromBits(14), s.limitUI16 = s.maxFromBits(16), s.limitUI32 = s.maxFromBits(32), s.limitUI40 = s.maxFromBits(40), s.limitUI48 = s.maxFromBits(48), s.randomUI04 = function () { return Math.round(Math.random() * s.limitUI04) }, s.randomUI06 = function () { return Math.round(Math.random() * s.limitUI06) }, s.randomUI08 = function () { return Math.round(Math.random() * s.limitUI08) }, s.randomUI12 = function () { return Math.round(Math.random() * s.limitUI12) }, s.randomUI14 = function () { return Math.round(Math.random() * s.limitUI14) }, s.randomUI16 = function () { return Math.round(Math.random() * s.limitUI16) }, s.randomUI32 = function () { return Math.round(Math.random() * s.limitUI32) }, s.randomUI40 = function () { return (0 | Math.random() * (1 << 30)) + (0 | 1024 * Math.random()) * (1 << 30) }, s.randomUI48 = function () { return (0 | Math.random() * (1 << 30)) + (0 | Math.random() * (1 << 18)) * (1 << 30) }, s.paddedString = function (e, t, n) { n = n || "0"; for (var r = t - (e = String(e)).length; 0 < r; r >>>= 1, n += n)1 & r && (e = n + e); return e }, s.prototype.fromParts = function (e, t, n, r, o, a) { return this.version = n >> 12 & 15, this.hex = s.paddedString(e.toString(16), 8) + "-" + s.paddedString(t.toString(16), 4) + "-" + s.paddedString(n.toString(16), 4) + "-" + s.paddedString(r.toString(16), 2) + s.paddedString(o.toString(16), 2) + "-" + s.paddedString(a.toString(16), 12), this }, s.prototype.toString = function () { return this.hex }, s.prototype.toURN = function () { return "urn:uuid:" + this.hex }, s.prototype.toBytes = function () { for (var e = this.hex.split("-"), t = [], n = 0, r = 0; r < e.length; r++)for (var o = 0; o < e[r].length; o += 2)t[n++] = parseInt(e[r].substr(o, 2), 16); return t }, s.prototype.equals = function (e) { return e instanceof UUID && this.hex === e.hex }, s.getTimeFieldValues = function (e) { var t = e - Date.UTC(1582, 9, 15), e = t / 4294967296 * 1e4 & 268435455; return { low: 1e4 * (268435455 & t) % 4294967296, mid: 65535 & e, hi: e >>> 16, timestamp: t } }, s._create4 = function () { return (new s).fromParts(s.randomUI32(), s.randomUI16(), 16384 | s.randomUI12(), 128 | s.randomUI06(), s.randomUI08(), s.randomUI48()) }, s._create1 = function () { var e = (new Date).getTime(), t = s.randomUI14(), n = 1099511627776 * (1 | s.randomUI08()) + s.randomUI40(), r = s.randomUI04(), o = 0; e !== o ? (e < o && t++, o = e, r = s.randomUI04()) : Math.random() < .25 && r < 9984 ? r += 1 + s.randomUI04() : t++; e = s.getTimeFieldValues(o), o = e.low + r, r = 4095 & e.hi | 4096; return (new s).fromParts(o, e.mid, r, (t &= 16383) >>> 8 | 128, 255 & t, n) }, s.create = function (e) { return this["_create" + (e = e || 4)]() }, s.fromTime = function (e, t) { t = t || !1; var n = s.getTimeFieldValues(e), r = n.low, e = 4095 & n.hi | 4096; return !1 === t ? (new s).fromParts(r, n.mid, e, 0, 0, 0) : (new s).fromParts(r, n.mid, e, 128 | s.limitUI06, s.limitUI08 - 1, s.limitUI48 - 1) }, s.firstFromTime = function (e) { return s.fromTime(e, !1) }, s.lastFromTime = function (e) { return s.fromTime(e, !0) }, s.fromURN = function (e) { var t; return t === /^(?:urn:uuid:|\{)?([0-9a-f]{8})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{2})([0-9a-f]{2})-([0-9a-f]{12})(?:\})?$/i.exec(e) ? (new s).fromParts(parseInt(t[1], 16), parseInt(t[2], 16), parseInt(t[3], 16), parseInt(t[4], 16), parseInt(t[5], 16), parseInt(t[6], 16)) : null }, s.fromBytes = function (e) { var t = "", n = 0, r = [4, 2, 2, 2, 6], o = 0; if (e.length < 5) return null; for (; o < r.length; o++) { for (var a = 0; a < r[o]; a++) { var i = e[n++].toString(16); t += i = 1 === i.length ? "0" + i : i } 6 !== r[o] && (t += "-") } return s.fromURN(t) }, s.fromBinary = function (e) { for (var t = [], n = 0; n < e.length; n++)if (t[n] = e.charCodeAt(n), 255 < t[n] || t[n] < 0) throw new Error("Unexpected byte in binary data."); return s.fromBytes(t) }, s
}();
function openWindow(e, t, r) { var n = "pppApmWindow_" + (new Date).getTime(), o = null, a = { w: 800, h: 600 }, i = a.w, s = a.h, c = screen.width / 2 - i / 2, p = screen.height / 2 - s / 2, a = "https://cdn.safecharge.com/safecharge_resources/v1/websdk/preloader.html?" + (new Date).getTime(); return function e(t, n) { window.setTimeout(function () { null == t || null == t.closed || 1 == t.closed ? window.skipGetPayoutStatus || n() : e(t, n) }, 200) }(o = window.open(a, n, "height=" + s + ",width=" + i + ",top=" + p + ",left=" + c + ",toolbar=yes,location=no,directories=no,status=no,menubar=no,linemenubar=no,scrollbars=yes,resizable=yes,modal=yes"), function () { var n = new XMLHttpRequest; n.open("POST", t + "/ppp/api/v1/getPayoutStatus.do", !0), n.setRequestHeader("Content-Type", "application/json;charset=UTF-8"), n.timeout = 6e4, n.onerror = function () { r({ status: "ERROR", type: "network", code: "connection_timeout", errorDescription: "Connection to Safecharge server timed out." }) }, n.ontimeout = function () { return r({ error: { type: "network", code: "connection_timeout", message: "Connection to Safecharge server timed out." } }) }, n.onload = function () { var e, t; 200 === n.status && ((e = fixIncorrectResult(JSON.parse(n.response))).paymentOption = e.paymentOption || {}, e.paymentOption.card = e.paymentOption.card || {}, e = { result: e.transactionStatus || e.status, errCode: e.gwExtendedErrorCode || e.gwErrorCode || e.paymentMethodErrorCode || e.errorCode || e.errCode || "0", errorDescription: e.gwErrorReason || e.paymentMethodErrorReason || e.errorDescription || e.reason || "", userPaymentOptionId: e.paymentOption.userPaymentOptionId, ccCardNumber: e.paymentOption.card.ccCardNumber || "", bin: e.paymentOption.card.bin || "", last4Digits: e.paymentOption.card.last4Digits || "", ccExpMonth: e.paymentOption.card.ccExpMonth || "", ccExpYear: e.paymentOption.card.ccExpYear || "", transactionId: e.transactionId, cancelled: !1 }, t ? (t = !1, r(e)) : "PENDING" === e.result || "ERROR" === e.result || 9072 === e.errCode || r(e)) }, n.send(JSON.stringify({ sessionToken: e })) }.bind(this)), o } var util = { parseResult: function (e) { var t = {}; try { t = JSON.parse(e) } catch (e) { t = { error: { type: "network", code: "invalid response", message: "SafeCharge Server returned invalid response" } } } return t } };
function setOrderAmount(e, t, n) { var r = new XMLHttpRequest; r.open("POST", e + "/ppp/api/v1/websdk/clientSetOrderAmount.do", !0), r.setRequestHeader("Content-Type", "application/json;charset=UTF-8"), r.timeout = 3e4, r.onerror = function () { n({ status: "ERROR", type: "network", code: "connection_timeout", errorDescription: "Connection to Safecharge server timed out." }) }, r.ontimeout = function () { return n({ error: { type: "network", code: "connection_timeout", message: "Connection to Safecharge server timed out." } }) }, r.onload = function () { var e; 200 === r.status && (e = util.parseResult(r.responseText), n(e)) }, r.send(JSON.stringify(t)) } !function (e) {
    var t, I, b = {}, y = null, h = null, f = null, v = {}, P = {}, g = ulog("safeCharge"), O = "", E = {}, D = [], r = !0, T = "", C = "", k = "", i = "o2087c6f6-7865-11e9-9143-116d91954306", s = !1, _ = "card type blocked", A = "Connection to Nuvei server timed out.", R = "Card does not support 3D secure", c = null, p = null, d = null; function x(e, t) {
        var n = []; return e.forEach(function (e) {
            e = (Array.isArray(e) ? e : [e]).map(function (e) { e = e.toLocaleLowerCase(); return t.brand && e === t.brand.toLocaleLowerCase() || t.cardType && e === t.cardType.toLocaleLowerCase() || t.issuerCountry && e === t.issuerCountry.toLocaleLowerCase() || t.cardProduct && e === t.cardProduct.toLocaleLowerCase() || !0 === t.isPrepaid && "prepaid" === e }); n.push(-1 === e.indexOf(!1))
        }), -1 !== n.indexOf(!0)
    } function n(e) { e = e.paymentOption; if (e) { if (e.__makePayment || e.card && e.card.CVV && e.card.CVV.__makePayment) return "cc_card"; if (e.card && e.card.externalToken && "GooglePay" === e.card.externalToken.externalTokenProvider) return "ppp_GooglePay"; if (e.alternativePaymentMethod && e.alternativePaymentMethod.paymentMethod) return e.alternativePaymentMethod.paymentMethod; if (e.userPaymentOptionId && !e.alternativePaymentMethod) return "cc_card"; if (e.card && e.card.cardNumber) return "cc_card" } return "" }
    function l(e) { (e = e.errorDescription || e.reason || e.error && e.error.message) && a.log(`getCardDetails returned error "${e}"`) } var o, a = console; function M(r, o) {
        var a; g.info("---\x3e paymentFrame \n" + JSON.stringify(r, null, 4)), g.trace("---\x3e paymentFrame \n"), c = r.paymentOption, p = r.transactionId, d = r.ccTempToken, window.nuveiIframeName = websdk_core.inject3Dmodal(i), websdk_core.onPaymentEvent({ eventType: "challengeStarted", threeD: { version: c.card.threeD.version || "", flow: "challenge" } }, b.onPaymentEvent, k, C, T), window.threeDPaymentActionId = callDtrum("enterAction", ["challenge_started/challenge_complete", void 0, Date.now()]), document.querySelector("a.sfcIcon--close.sfcModal-close").addEventListener("click", function () {
            setTimeout(function () { document.getElementById(i).style.display = "none", L() }, 300),
                websdk_core.onPaymentEvent({ eventType: "challengeEnded", threeD: { version: c.card.threeD.version || "", flow: "challenge" } }, b.onPaymentEvent, k, C, T), callDtrum("sendSessionProperties", [null, null, { "3dauthobject": "cancelled:true" }, null]), o({ cancelled: !0 })
        }, { once: !0 }), s || (a = function (e) {
            var t = e.origin, n = {}; try { n = JSON.parse(e.data) } catch (e) { } n.threeDLoad && t === n.origin && document.getElementsByName(window.nuveiIframeName)[0].contentWindow.postMessage(JSON.stringify(c), n.origin), g.info("---\x3e Auth 3ds data \n" + JSON.stringify(n, null, 4)), g.trace("---\x3e Auth 3ds data \n"), t === b.server && (n.paRes && (setTimeout(function () { document.getElementById(i).style.display = "none", callDtrum("leaveAction", [threeDPaymentActionId, Date.now()]), L() }, 300), n.cancelled = !1, websdk_core.onPaymentEvent({ eventType: "challengeEnded", threeD: { version: c.card.threeD.version || "", flow: "challenge" } }, b.onPaymentEvent, k, C, T), callDtrum("sendSessionProperties", [null, null, { "3dauthobject": JSON.stringify(n) }, null]), window.removeEventListener("message", a, !1), s = !1, o(n)), (n.result || "" === n.result || n.transactionId || "-5" === n.errCode) && (setTimeout(function () { document.getElementById(i).style.display = "none", L() }, 300), n.cancelled = !1, "authenticate3d" === r.all.sourceMethod && (n.ccTempToken = d, n.transactionId = p), websdk_core.onPaymentEvent({ eventType: "challengeEnded", threeD: { version: c.card.threeD.version || "", flow: "challenge" } }, b.onPaymentEvent, k, C, T),
                callDtrum("sendSessionProperties", [null, null, { "3dauthobject": JSON.stringify(n) }, null]), callDtrum("leaveAction", [threeDPaymentActionId, Date.now()]), s = !1, window.removeEventListener("message", a, !1), o(n)))
        }, window.addEventListener("message", a), s = !0)
    } e.dtBuffer = [], e.callDtrum = function (e, t) { if ("object" == typeof dtrum && !0 !== r) { for (; dtBuffer.length;) { var n = dtBuffer.shift(); "enterAction" === n[0] ? o = dtrum[n[0]].apply(this, n[1]) : "leaveAction" === n[0] ? (dtrum[n[0]].apply(this, [o, Date.now()]), o = void 0) : dtrum[n[0]].apply(this, n[1]) } return o && "leaveAction" === e && (t[0] = o, o = void 0), dtrum[e].apply(this, t) } dtBuffer.push([e, t]) }, window.addEventListener("beforeunload", function () { callDtrum("endSession"), callDtrum("disable") }); function N(e, t, o) {
        var n = document.createElement("form"); n.style.display = "none", n.id = "u" + UUIDjs.create(1).hex;
        var a = document.createElement("iframe"); a.style.display = "none", a.name = "i" + UUIDjs.create(1).hex; var r = document.createElement("input"); document.body.appendChild(a), n.method = "POST", n.action = e, n.target = a.name, r.value = t, r.name = "threeDSMethodData", n.appendChild(r), document.body.appendChild(n), r = {}; try { r = JSON.parse(atob(t)) } catch (e) { } var i = r.threeDSServerTransID; n.submit(); var s = setTimeout(function () { window.removeEventListener("message", c, !1), o("N") }, 15050), c = function (e) { clearTimeout(s), window.removeEventListener("message", c, !1); var t = {}; if (document.getElementsByName(a.name)[0].remove(), e.data) try { if (2 !== (t = JSON.parse(e.data)).response.split("=").length) return o("N"); var n = atob(t.response.split("=")[1]), r = { threeDSServerTransID: !1 }; try { r = JSON.parse(n) } catch (e) { return o("N") } return r.threeDSServerTransID && r.threeDSServerTransID === i ? o("Y") : o("N") } catch (e) { return o("N") } }; window.addEventListener("message", c, { once: !0 }),
            document.getElementById(n.id).remove()
    } function m(e) {
        var t, n, r, o, a, i, s, c, p = {}; try { p = JSON.parse(e.data) } catch (e) { } if ("tooltip-action" === p.event) {
            var d, l, m = p.message.payload.data, u = document.getElementById("toolTipMsg"),
                e = u.getBoundingClientRect(); if ("hidden" === m.visibility) return void (u.style.visibility = m.visibility); "cvv" === m.field ? (u.style.visibility = "visible", l = (d = document.getElementById("_cvc")).getBoundingClientRect(), v[d.name] && v[d.name].options && v[d.name].options.style && v[d.name].options.style.cvvIcon && "top" === v[d.name].options.style.cvvIcon.tooltipPosition ? u.style.top = l.top - e.height + window.pageYOffset + "px" : u.style.top = l.bottom + window.pageYOffset + 2 + "px", v[d.name] && v[d.name].fieldsOptions && ("rtl" === v[d.name].fieldsOptions.textDirection || "he" === v[d.name].fieldsOptions.locale || "ar" === v[d.name].fieldsOptions.locale) ? l.left - e.width / 2 < 0 ? u.style.left = 0 : u.style.left = l.left - e.width / 2 + "px" : l.right + e.width / 2 > document.documentElement.offsetWidth ? u.style.left = l.right - e.width + "px" : u.style.left = l.right - 10 - e.width / 2 + "px", e.width >= document.documentElement.offsetWidth && (u.style.width = document.documentElement.offsetWidth - 60 + "px")) : (u.style.visibility = m.visibility, l = (d = document.getElementById("one-field")).getBoundingClientRect(),
                    v[d.name] && v[d.name].options && v[d.name].options.style && v[d.name].options.style.cvvIcon && "top" === v[d.name].options.style.cvvIcon.tooltipPosition ? u.style.top = l.top - e.height + window.pageYOffset + "px" : u.style.top = l.bottom + 2 + window.pageYOffset + "px", v[d.name] && v[d.name].fieldsOptions && ("rtl" === v[d.name].fieldsOptions.textDirection || "he" === v[d.name].fieldsOptions.locale || "ar" === v[d.name].fieldsOptions.locale) ? l.left - e.width / 2 < 0 ? u.style.left = 0 : u.style.left = l.left - e.width / 2 + m.inputWrapperRect.width / 4 + "px" : l.right + e.width / 2 > document.documentElement.offsetWidth ? u.style.left = l.right - e.width + "px" : u.style.left = m.inputWrapperRect.right - e.width / 2 - 20 + "px", e.width > document.documentElement.offsetWidth && (u.style.width = document.documentElement.offsetWidth - 10 + "px"))
        } y && "tokenize-result" === p.event && (g.info("---\x3e " + p.event + "\n" + JSON.stringify(p, null, 4)), g.trace("---\x3e " + p.event + "\n"), t = p.message.payload.data, setTimeout(function () { callDtrum("endSession") }, 1e3),
            setTimeout(function () { callDtrum("disable") }, 2e3), t.paymentOption && t.paymentOption.card && t.paymentOption.card.threeD && t.paymentOption.card.threeD.v2supported && "true" === t.paymentOption.card.threeD.v2supported ? (u = t.paymentOption.card.threeD, t.paymentOption = t.paymentOption || {}, t.paymentOption.card = t.paymentOption.card || {}, t.paymentOption.card.threeD = t.paymentOption.card.threeD || {}, u.methodUrl || (t.paymentOption.card.threeD.methodCompletionInd = "U", y(t)), u.methodUrl && u.methodPayload && N(u.methodUrl, u.methodPayload,
                function (e) { t.paymentOption.card.threeD.methodCompletionInd = e, y(t) })) : y(p.message.payload.data)), "init-payment-threeDVersion" === p.event && (g.info("---\x3e " + p.event + "\n" + JSON.stringify(p, null, 4)), g.trace("---\x3e " + p.event + "\n"), O = p.message.payload.data), "onPaymentEvent" === p.event && (O = p.message.payload.data.threeDVersion, C = p.message.payload.data.v2supported, websdk_core.onPaymentEvent({ eventType: "tokenized", threeD: { version: O } }, b.onPaymentEvent, k, C, T), "false" === p.message.payload.data.v2supported && websdk_core.onPaymentEvent({ eventType: "3DSupported", threeD: { threeDSupported: "false" } }, b.onPaymentEvent, k, C, T)),
            "dcc-result" === p.event && y(p.message.payload.data), "sightline-enroll-account-result" === p.event && h(p.message.payload.data), "card-details-result" === p.event && (y || f)(p.message.payload.data), "add-card-upo-result" === p.event && y && y(p.message.payload.data), f && "make-payment-result" === p.event && (g.info("---\x3e " + p.event + "\n" + JSON.stringify(p, null, 4)), g.trace("---\x3e " + p.event + "\n"), (r = p.message.payload.data).paymentOption && r.paymentOption.card && r.paymentOption.card.threeD && r.paymentOption.card.threeD.acsUrl && (r.paymentOption.card.threeD.paRequest || r.paymentOption.card.threeD.cReq) ? (r.paymentOption.card.threeD.paRequest && (r.all.sourceMethod && "createPayment" === r.all.sourceMethod ? r.paymentOption.card.threeD.termUrl = r.all.server + "/ppp/api/threeDSecure/completePayment.do?sessionToken=" + r.sessionToken : r.all.sourceMethod && "authenticate3d" === r.all.sourceMethod && (r.paymentOption.card.threeD.termUrl = r.all.server + "/ppp/api/threeDSecure/completeVerify3d.do?sessionToken=" + r.sessionToken)), k = r.paymentOption.card.threeD.acsUrl, websdk_core.onPaymentEvent({ eventType: "paymentStarted", threeD: { version: r.paymentOption.card.threeD.version || "", flow: "challenge" } }, b.onPaymentEvent, k, C, T), M(r, function (e) { f(e) })) : (n = void 0 === r.error ? {} : r.error, r.paymentOption = r.paymentOption || {}, r.paymentOption.card = r.paymentOption.card || {},
                r.paymentOption.card.threeD = r.paymentOption.card.threeD || {}, r.errorDescription !== R && websdk_core.onPaymentEvent({ eventType: "paymentStarted", threeD: { version: r.paymentOption.card.threeD.version || "", flow: "" } }, b.onPaymentEvent, k, C, T), o = { result: r.transactionStatus || r.status || "ERROR", errCode: r.gwExtendedErrorCode || r.gwErrorCode || r.paymentMethodErrorCode || r.errorCode || n.code || r.errCode || "0", errorDescription: r.gwErrorReason || r.paymentMethodErrorReason || r.errorDescription || r.message || n.message || "", userPaymentOptionId: r.paymentOption.userPaymentOptionId || "", cavv: r.paymentOption.card.threeD.cavv || "", eci: r.paymentOption.card.threeD.eci || "", xid: r.paymentOption.card.threeD.xid || "", dsTransID: r.paymentOption.card.threeD.dsTransID || "", ccCardNumber: r.paymentOption.card.ccCardNumber || "", bin: r.paymentOption.card.bin || "", last4Digits: r.paymentOption.card.last4Digits || "", ccExpMonth: r.paymentOption.card.ccExpMonth || "", ccExpYear: r.paymentOption.card.ccExpYear || "", transactionId: r.transactionId, mcc: r.mcc || "", cancelled: !1, transactionStatus: r.transactionStatus, transactionType: r.transactionType }, r.all && "authenticate3d" === r.all.sourceMethod && (o.ccTempToken = r.ccTempToken), r.partialApproval && "createPayment" === r.all.sourceMethod && (o.partialApproval = r.partialApproval), f(o))),
            "change" === p.event && v[p.source] && (i = v[p.source].stateClass.focus, n = v[p.source].stateClass.empty, r = v[p.source].stateClass.complete, o = v[p.source].stateClass.optional, v[p.source].parentElm.classList.remove(o), p.message.payload.empty ? (v[p.source].parentElm.classList.add(n), (v[p.source].options.optional || p.message.payload.optional) && v[p.source].parentElm.classList.add(o)) : (v[p.source].parentElm.classList.remove(n), v[p.source].parentElm.classList.remove(o)), p.message.payload.complete ? v[p.source].parentElm.classList.add(r) : v[p.source].parentElm.classList.remove(r), p.message.payload && p.message.payload.cardType && "unknown" !== p.message.payload.cardType && (E = p.message.payload), a = [], "ccCvc" !== v[p.source].field && "ccExpiration" !== v[p.source].field || Object.keys(v).forEach(function (e) { "ccNumber" !== v[e].field || v[e].peers.ccCvc !== p.source && v[e].peers.ccExpiration !== p.source || ((D = []).push(v[e].uuid), v[e].peers.ccCvc && D.push(v[e].peers.ccCvc), v[e].peers.ccExpiration && D.push(v[e].peers.ccExpiration)) }), "ccNumber" === v[p.source].field && v[p.source].peers && (v[p.source].peers.ccCvc || v[p.source].peers.ccExpiration) && ((D = []).push(p.source), v[p.source].peers.ccCvc && D.push(v[p.source].peers.ccCvc), v[p.source].peers.ccExpiration && D.push(v[p.source].peers.ccExpiration)), D.includes(v[p.source].uuid) && (D.forEach(function (e) { a.push(v[e].parentElm.classList.contains("sfc-complete")) }), a.includes(!1) || 0 === a.length ? p.message.payload.allFieldsCompleted = !1 : p.message.payload.allFieldsCompleted = !0), w("change", v[p.source].subs, Object.assign({ field: v[p.source].field }, p.message.payload))), "focus" === p.event && v[p.source] && (i = v[p.source].stateClass.focus, v[p.source].parentElm.classList.add(i), w(p.event, v[p.source].subs, { field: v[p.source].field })), "paste" === p.event && v[p.source] && w(p.event, v[p.source].subs,
                { field: v[p.source].field }), "blur" === p.event && v[p.source] && (i = v[p.source].stateClass.focus, v[p.source].parentElm.classList.remove(i), w(p.event, v[p.source].subs, { field: v[p.source].field, fieldData: p.fieldData, optional: p.optional, complete: p.complete })), "load" === p.event && v[p.source] && v[p.source]._init(), "ready" === p.event && (v[p.source] && ("_card" === v[p.source]._type && p.message.payload.support19Digits, p.message.payload.data && p.message.payload.data.style && p.message.payload.data.style.base && p.message.payload.data.style.base.fieldSize ? v[p.source].frameElm.style.height = p.message.payload.data.style.base.fieldSize : 0 !== p.message.payload.height ? v[p.source].frameElm.style.height = p.message.payload.height + "px" : p.message.payload.data && p.message.payload.data.style && p.message.payload.data.style.base && p.message.payload.data.style.base.fontSize ? (i = p.message.payload.data.style.base.fontSize.match(/(\d+)/)).length && (i = parseInt(i[0]) + 3, v[p.source].frameElm.style.height = i + "px") : v[p.source].frameElm.style.height = "1rem", v[p.source].sendPeers()), w(p.event, v[p.source].subs, { field: v[p.source].field })), "keydown" === p.event && v[p.source] && w(p.event, v[p.source].subs, { field: v[p.source].field, keyCode: p.keyCode }), "enterXhrActionGetToken" === p.event && (s = callDtrum("enterAction", ["GetToken_started/GetToken_complete", void 0, Date.now()]), window.getTokenDo = s), "leaveXhrActionGetToken" === p.event && callDtrum("leaveAction", [window.getTokenDo, Date.now()]), "enterXhrActionInit" === p.event && (s = callDtrum("enterAction", ["initPayment_started/initPayment_complete", void 0, Date.now()]), window.actionIdInit = s), "leaveXhrActionInit" === p.event && callDtrum("leaveAction",
                    [window.actionIdInit, Date.now()]), "enterXhrActionPayment" === p.event && (c = callDtrum("enterAction", ["clientPayment_started/clientPayment_complete", void 0, Date.now()]), window.actionIdPayment = c), "leaveXhrActionPayment" === p.event && callDtrum("leaveAction", [window.actionIdPayment, Date.now()]), "enterXhrActionAuth" === p.event && (c = callDtrum("enterAction", ["clientAuthorize3d_started/clientAuthorize3d_complete", void 0, Date.now()]), window.requestAuthAction = c), "leaveXhrActionAuth" === p.event && callDtrum("leaveAction", [window.requestAuthAction, Date.now()])
    } function u(e) {
        var t; e.hasOwnProperty("cardNumber") && (t = e || {}).status && "OK" === t.status && (function (e) { for (var t in v) v[t].frameElm && ("ccNumber" === v[t].field && v[t].setValue(e.cardNumber), "ccExpiration" === v[t].field && v[t].setValue(e.expDate), "card" === v[t].field && v[t].setValue(e)) }(t), "function" == typeof b.onPostScanCardEvent && (t.hasCardNumber = t.cardNumber && "null" !== t.cardNumber, t.hasExpDate = t.expDate && "null" !== t.expDate, delete t.cardNumber, delete t.expDate, delete t.cvv, b.onPostScanCardEvent(t)))
    } function w(e, t, n) { t[e] && t[e].forEach(function (e) { e.call(n, n) }) } function S(e, t, n) { this.field = e.field, e.type && (e.type = "_" + e.type), e.targetHost = { local: "https://dev-mobile.safecharge.com", test: "https://cdn-int.safecharge.com", prod: "https://cdn.safecharge.com", live: "https://cdn.safecharge.com", tag: "https://srv-bsf-devppptag.gw-4u.com" }[e.env || "prod"], this._type = e.type || "", this.options = e, this.fieldsOptions = n, this.uuid = t, this.subs = {}, this.frameElm = null, this.initialParentClasses = "", this._state = { destroyed: !1 }, this.stateClass = { focus: "sfc-focus", empty: "sfc-empty", invalid: "sfc-invalid", complete: "sfc-complete", optional: "sfc-optional" }, this.options.classes && Object.assign(this.stateClass, this.options.classes), this.peers = {} } function U(e) { this.config = e, this.config.faction = UUIDjs.create().toString(), this.instances = [] } function L() { document.getElementsByName(this.nuveiIframeName)[0].remove(), document.getElementById(i).remove() } window.addEventListener("message", m, !1), window.addEventListener("popstate", function () { var e = {}, t = document.location.hash.substring(1); if (t) try { e = JSON.parse(atob(t)) } catch (e) { } u(e) }, !1), S.prototype._sendMsg = function (e) { e.type = "td", e.source = this.uuid; var t = document.createElement("A"); t.href = websdk_core.findSfcHost(), e.origin = document.location.origin; t = t.protocol + "//" + t.host; this.frameElm.contentWindow && this.frameElm.contentWindow.postMessage(JSON.stringify(e), t) }, S.prototype.sendPeers = function () { this._sendMsg({ action: "add-member", payload: this.peers, origin: document.location.origin }) }, S.prototype._check = function () { if (this._state.destroyed) throw "The element has already been destroyed" }, S.prototype._init = function () { this._check(), this._sendMsg({ action: "init-field", support19Digits: t, payload: this.options, fieldsConfig: this.fieldsOptions, origin: document.location.origin, merchantDetails: b }) }, S.prototype.addMember = function (e) { this.peers[e.type] = e.id }, S.prototype.setValue = function (e) { this._check(), this._sendMsg({ action: "input-value", value: e }) }, S.prototype.focus = function () { this._check(), this._sendMsg({ action: "input-focus", source: this.uuid }) }, S.prototype.clear = function () { this._check(), this._sendMsg({ action: "input-clear", source: this.uuid }) }, S.prototype.__tokenize = function (e, t, n) { y = n, this._check(), this._sendMsg({ extraData: t, action: "input-tokenize", sessionToken: e.sessionToken, merchantSiteId: e.merchantSiteId, env: e.env, all: e }) }, S.prototype.__getDCC = function (e, t, n) { y = n, t.cardNumber = {}, this._check(), this._sendMsg({ extraData: t, action: "get-dcc", sessionToken: e.sessionToken, merchantSiteId: e.merchantSiteId, merchantId: e.merchantId, env: e.env }) }, S.prototype.__enrollSightlineAccount = function (e, t, n) { h = n, this._check(), this._sendMsg({ extraData: t, action: "enroll-sightline-account", sessionToken: e.sessionToken, merchantSiteId: e.merchantSiteId, merchantId: e.merchantId, env: e.env }) }, S.prototype.__getCardDetails = function (e, t, n) { y = n, this._check(), this._sendMsg({ extraData: t, action: "get-card-details", sessionToken: e.sessionToken, merchantSiteId: e.merchantSiteId, merchantId: e.merchantId, env: e.env }) }, S.prototype.__addCardUpo = function (e, t, n) { y = n, this._check(), delete t.cardNumber, this._sendMsg({ extraData: t || {}, action: "add-card-upo", sessionToken: e.sessionToken, merchantSiteId: e.merchantSiteId, merchantId: e.merchantId, env: e.env, all: e }) }, S.prototype.__makePayment = function (e, t, n) { var r, o; f = n, t.paymentOption.userPaymentOptionId ? (r = t.paymentOption.userPaymentOptionId, o = t.paymentOption.card.expirationMonth, n = t.paymentOption.card.expirationYear, t.paymentOption = {}, t.paymentOption.card = {}, t.paymentOption.userPaymentOptionId = r, t.paymentOption.card.expirationMonth = o, t.paymentOption.card.expirationYear = n) : t.paymentOption = {}, this._check(), this._sendMsg({ extraData: t, action: "input-make-payment", sessionToken: e.sessionToken || t.sessionToken, merchantSiteId: e.merchantSiteId, merchantId: e.merchantId, env: e.env, all: e }) },
        S.prototype.destroy = function () { this._check(), this._state.destroyed = !0, this.parentElm.innerHTML = "", this.parentElm.className = this.initialParentClasses }, S.prototype.attach = function (e) {
            "string" == typeof e && (e = document.querySelector(e)); var t = this; (this.parentElm = e).addEventListener("click", function () { t.focus() }); for (var n, r = e.nextElementSibling; r;)"LABEL" === r.tagName && r.addEventListener("click", function () { !1 === t._state.destroyed && t.focus() }), r = r.nextElementSibling; this.initialParentClasses = e.classList.value, e.classList.add("SfcField"), e.classList.add(this.stateClass.empty), this.options.optional && e.classList.add(this.stateClass.optional),
                !this.options.cvvIcon || "_cvc" !== this.options.type && "" !== this._type || document.getElementById("toolTipMsg") || (a = document.createElement("div"), n = "The 3 digit secure code on the back of your card", this.fieldsOptions && this.fieldsOptions.i18n && this.fieldsOptions.i18n.cvv_tooltip && (n = this.fieldsOptions.i18n.cvv_tooltip), o = { position: "absolute", visibility: "hidden", maxWidth: "100%", minWidth: "150px", backgroundColor: "black", color: "#fff", fontSize: "12px", textAlign: "center", borderRadius: "6px", padding: "5px 10px", zIndex: 1, top: 0, left: 0, float: "left", clear: "left" }, o = objectToCSS(o = this.options && this.options.style && this.options.style.tooltip ? Object.assign(o, this.options.style.tooltip) : o), a.setAttribute("id", "toolTipMsg"), "rtl" === this.fieldsOptions.textDirection && a.setAttribute("dir", "rtl"), a.textContent = n, document.body.appendChild(a), document.head.insertAdjacentHTML("beforeend", "<style> #toolTipMsg {" + o + "} </style>"), this.options.tooltipRect = a.getBoundingClientRect()); var o = document.createElement("div"); o.setAttribute("style", "margin:0 !important; padding:0 !important;border:none !important;display:block !important;background:transparent !important;position:relative !important;opacity:1 !important;");
            var a = document.createElement("iframe"); a.frameborder = "0", a.allowtransparency = "true", a.scrolling = "no", a.name = this.uuid, a.allowpaymentrequest = "true", a.src = websdk_core.findSfcHost() + "sfc_inner" + this._type + ".html?v1.136.0", a.title = "SFC secure field", e.appendChild(o), a.setAttribute("style", "border:none !important;margin:0 !important;padding:0 !important;width:1px !important;min-width:100% !important;overflow:hidden !important;display:block !important;height:0;"), a.setAttribute("id", this._type || "one-field"), a.allow = "shared-autofill", this.frameElm = a, o.appendChild(a)
        }, S.prototype.on = function (e, t) { -1 < ["blur", "change", "focus", "ready", "paste", "keydown"].indexOf(e) && t && "function" == typeof t && (this.subs[e] || (this.subs[e] = []), this.subs[e].push(t)) }, U.prototype.create = function (t, e) {
            if ("card" !== t && "ccNumber" !== t && "ccExpiration" !== t && "ccCvc" !== t) throw "A valid Element name must be provided. Valid Elements is card\nyou requested: " + t + "."; var n = UUIDjs.create().toString(); "card" !== t && (e.type = { ccNumber: "card", ccExpiration: "exp", ccCvc: "cvc" }[t]); var r = this.config.alwaysCollectCvv; return "ccCvc" === t && (e.optional = !0 === e.optional || "optional" === r),
                "ccNumber" !== t && "card" !== t || (e.cvcIsOptional = !0 === e.cvcIsOptional || "optional" === r), e.field = t, e.env = b.env, e.cvvIcon = b.cvvIcon, v[n] = new S(e, n, this.config), this.instances.length && this.instances.forEach(function (e) { e.instance.addMember({ type: t, id: n }) }), this.instances.push({ type: t, instance: v[n] }), v[n]
        }; var q = function (e) {
            var t = {}; try { t = JSON.parse(e) }
            catch (e) { t = { error: { type: "network", code: "invalid response", message: "SafeCharge Server returned invalid response" } } } return t
        }, j = function (e) { var t = new RegExp(/^(customField)([1-9]+)*$/), t = e.match(t); if (t) { t = t[2]; return t && 0 < t && t < 16 } return !1 }; e.SafeCharge = function (D) {
            callDtrum("enable"), callDtrum("setAutomaticActionDetection", [!1]), callDtrum("setLoadEndManually"); var e = callDtrum("enterAction", ["init webSDK", void 0, Date.now()]); P = {}, D = D || {}, b.sessionToken = D.sessionToken, b.env = D.env || "prod", b.merchantSiteId = D.merchantSiteId, b.merchantId = D.merchantId, b.sourceApplication = D.sourceApplication, b.logLevel = D.logLevel || 0, b.strictCardBlocking = D.strictCardBlocking, b.blockCards = D.blockCards, b.blockPasteCard = D.blockPasteCard, b.cvvIcon = D.cvvIcon || !1, t = D.support19Digits || !1, b.maskCvv = D.maskCvv || !1, b.onPaymentEvent = D.onPaymentEvent || "", b.onPostScanCardEvent = D.onPostScanCardEvent, b.disableNuveiAnalytics = D.disableNuveiAnalytics, b.force3D = D.force3D, g.level = b.logLevel; var w = null,
                S = { prod: "https://secure.safecharge.com", int: "https://ppp-test.safecharge.com", test: "https://ppp-test.safecharge.com", qa: "https://apmtest.gate2shop.com", dev: "https://dev-mobile.safecharge.com", local: "https://dev-mobile.safecharge.com", live: "https://secure.safecharge.com", tag: "https://srv-bsf-devppptag.gw-4u.com" }[b.env] || "https://secure.safecharge.com"; return b.server = S, r = !0 === b.disableNuveiAnalytics, callDtrum("sendSessionProperties", [null, null, { websdk_version: "v1.136.0" }, null]), callDtrum("sendSessionProperties", [null, null, { merchantid: b.merchantId }, null]), callDtrum("sendSessionProperties", [null, null, { merchantsiteid: b.merchantSiteId }, null]), b.sessionToken && callDtrum("sendSessionProperties", [null, null, { sessiontoken: b.sessionToken }, null]), callDtrum("sendSessionProperties", [null, null, { initobject: JSON.stringify(b) }, null]), callDtrum("leaveAction", [e, Date.now()]), {
                    fields: function (e) { return new U(e) },
                    getDirectUPOs: function () { return { apmgw_Secure_Bank_Transfer: !0 } }, enrollSightlineAccountWithFund: function (e, t) { var n, r = []; for (n in v) "ccNumber" === v[n].field && r.push(v[n]); r.pop().__enrollSightlineAccount(b, e, t) }, addApmUpo: function (e, t) {
                        if (!e.paymentMethodName) throw new Error("The paymentMethodName property is missing or invalid."); var e = { sessionToken: b.sessionToken || e.sessionToken, merchantSiteId: b.merchantSiteId || e.merchantSiteId, merchantId: b.merchantId || e.merchantId, clientRequestId: e.clientRequestId || Math.ceil(1e16 * Math.random()), paymentMethodName: e.paymentMethodName, apmData: e.apmData, billingAddress: e.billingAddress }, n = new XMLHttpRequest; n.open("POST", S + "/ppp/api/v1/clientAddUPOAPM.do", !0),
                            n.setRequestHeader("Content-Type", "application/json;charset=UTF-8"), n.timeout = 6e4, n.onload = function () { var e; 200 === n.status ? ("SUCCESS" === (e = { result: (e = q(n.responseText)).status, errCode: e.errCode || "0", errorDescription: e.errorDescription || e.reason || "", userPaymentOptionId: e.userPaymentOptionId || "", cancelled: e.cancelled || !1 }).result && (e.result = "ADDED"), t(e)) : t(q(n.responseText)) }, n.ontimeout = function () { t({ error: { status: "ERROR", type: "network", code: "connection_timeout", message: A } }) }, n.onabort = function () { t({ error: { status: "ERROR", type: "network", code: "connection_timeout", message: A } }) }, n.onerror = function () { t({ error: { status: "ERROR", type: "network", code: "connection_lost", message: A } }) }, n.send(JSON.stringify(e))
                    }, addCardUpo: function (r, o) {
                        if (r.cardNumber && r.cardNumber.__addCardUpo) r.cardNumber.__addCardUpo(b, r, o); else if (!0 === r.useFields) { var e, t = []; for (e in v) "ccNumber" !== v[e].field && "card" !== v[e].field || t.push(v[e]); t.pop().__addCardUpo(b, r, o) } else {
                            if (!r.cardNumber) throw new Error("The cardNumber property is missing or invalid."); if (!r.expMonth) throw new Error("The expMonth property is missing or invalid."); if (!r.expYear) throw new Error("The expYear property is missing or invalid."); function n() {
                                var e = { sessionToken: b.sessionToken || r.sessionToken, merchantSiteId: b.merchantSiteId || r.merchantSiteId, merchantId: b.merchantId || r.merchantId, clientRequestId: r.clientRequestId || Math.ceil(1e16 * Math.random()), ccCardNumber: r.cardNumber, ccExpMonth: r.expMonth, ccExpYear: r.expYear, ccNameOnCard: r.cardHolderName, billingAddress: r.billingAddress },
                                    n = new XMLHttpRequest; n.open("POST", S + "/ppp/api/v1/clientAddUPOCreditCard.do", !0), n.setRequestHeader("Content-Type", "application/json;charset=UTF-8"), n.timeout = 6e4, n.onload = function () { var e, t; 200 === n.status ? ("SUCCESS" === (t = { result: (e = q(n.responseText)).status, errCode: e.errCode || "0", errorDescription: e.errorDescription || e.reason || "", userPaymentOptionId: e.userPaymentOptionId || "", ccCardNumber: "", bin: e.bin || "", last4Digits: e.last4Digits || "", ccExpMonth: r.expMonth, ccExpYear: r.expYear, cancelled: e.cancelled || !1 }).result && (t.result = "ADDED"), e.last4Digits && (t.ccCardNumber = `${r.cardNumber[0]}****${e.last4Digits}`), o(t)) : o(q(n.responseText)) }, n.ontimeout = function () { o({ error: { status: "ERROR", type: "network", code: "connection_timeout", message: A } }) }, n.onabort = function () { o({ error: { status: "ERROR", type: "network", code: "connection_timeout", message: A } }) }, n.onerror = function () { o({ error: { status: "ERROR", type: "network", code: "connection_lost", message: A } }) }, n.send(JSON.stringify(e))
                            } b.blockCards && 0 < b.blockCards.length ? this.getCardDetails({ sessionToken: b.sessionToken, merchantId: b.merchantId, merchantSiteId: b.merchantSiteId, cardNumber: r.cardNumber }, function (e) { if ("ERROR" === e.status || e.error && "ERROR" === e.error.status) { if (!0 === b.strictCardBlocking) return void o({ result: "ERROR", errCode: e.errCode || "0", errorDescription: e.errorDescription || e.reason || e.error && e.error.message || "" }) } else if (x(b.blockCards, e)) return void o({ result: "ERROR", errCode: -6, errorDescription: _ }); n() }) : n()
                        }
                    }, initSightline: function (e, t, n, r) { if (void 0 === e) throw "please provide all parameters for initSightline method"; if (void 0 === t) throw "please provide all parameters for initSightline method"; if (void 0 === n) throw "please provide all parameters for initSightline method"; if (void 0 === r) throw "please provide all parameters for initSightline method"; var o = websdk_core.findSfcHost() + "fields/sightline.js", a = this; websdk_core.loadScript(o, function () { try { sightlineNuvei.init(e, t, n, b, a, r) } catch (e) { } }) },
                    createGlobalpayPayment: function (e, t) { if (void 0 === e || void 0 === t) throw "please provide all parameters for createGlobalpayPayment method"; void 0 !== globalpay.paymentVals ? (e.paymentOption = { alternativePaymentMethod: { paymentMethod: "apmgw_VIP_Preferred", globalpay_accountId: globalpay.paymentVals.accountNumber, globalpay_bankAccount: globalpay.paymentVals.selectedAccount, globalpay_firstName: globalpay.paymentVals.firstName, globalpay_lastName: globalpay.paymentVals.lastName, globalpay_phone: globalpay.paymentVals.phone } }, T = "apmgw_VIP_Preferred", this.createPayment(e, t)) : this.initGlobalpay(globalpay.placeholder, globalpay.globalpayParams, globalpay.styleObject, globalpay.cb) },
                    createSightlinePayment: function (e, t) {
                        T = "apmgw_PlayPlus", websdk_core.onPaymentEvent({ eventType: "initiated" }, b.onPaymentEvent, k, C, T); var n; if (e.paymentOption && e.paymentOption.userPaymentOptionId) e.paymentOption.alternativePaymentMethod = { paymentMethod: "apmgw_PlayPlus" }; else if (e.paymentOption = { alternativePaymentMethod: { paymentMethod: "apmgw_PlayPlus", sightline_ssn: sightlineNuvei.ssnVal } }, sightlineNuvei.checkFields && sightlineNuvei.checkFields(), !sightlineNuvei.checkSSN || !sightlineNuvei.checkSSN()) return void t({ status: "ERROR", type: "invalid input field", code: "invalid input field", errorDescription: "invalid SSN" }); e.billingAddress && sightlineNuvei.sightlineParams.billingAddress && (n = JSON.parse(JSON.stringify(e.billingAddress)), e.billingAddress = Object.assign(n, sightlineNuvei.sightlineParams.billingAddress)), e.userDetails && sightlineNuvei.sightlineParams.userDetails && (n = JSON.parse(JSON.stringify(e.userDetails)), e.userDetails = Object.assign(n, sightlineNuvei.sightlineParams.userDetails)), function (e, n) {
                            e.hasOwnProperty("useDCC") && (e.useDcc = e.useDCC, delete e.useDCC), e.hasOwnProperty("savePM") && (e.paymentOption.savePm = e.savePM, delete e.savePM); var r = new XMLHttpRequest; r.open("POST", S + "/ppp/api/v1/clientPayment.do", !0), r.setRequestHeader("Content-Type", "application/json;charset=UTF-8"), r.timeout = 6e4, r.onerror = function () { n({ status: "ERROR", type: "network", code: "connection_timeout", errorDescription: A }) }, r.ontimeout = function () {
                                return n({ error: { type: "network", code: "connection_timeout", message: A } })
                            }, r.onload = function () { var e, t; 200 === r.status ? (websdk_core.onPaymentEvent({ eventType: "paymentStarted" }, b.onPaymentEvent, k, C, T), callDtrum("leaveAction", [window.clintPaymentDoId, Date.now()]), void 0 === (e = q(r.responseText)).all && (e.all = {}), e.all.sourceMethod = "createPayment", e.all.server = S, "ERROR" === e.status ? n(e) : "SUCCESS" === e.status && (e.paymentOption = e.paymentOption || {}, e.paymentOption.card = e.paymentOption.card || {}, t = { result: e.transactionStatus, errCode: e.gwExtendedErrorCode || e.gwErrorCode || e.paymentMethodErrorCode || e.errorCode || "0", errorDescription: e.gwErrorReason || e.paymentMethodErrorReason || e.errorDescription || "", userPaymentOptionId: e.paymentOption.userPaymentOptionId, ccCardNumber: e.paymentOption.card.ccCardNumber, bin: e.paymentOption.card.bin, last4Digits: e.paymentOption.card.last4Digits || "", ccExpMonth: e.paymentOption.card.ccExpMonth || "", ccExpYear: e.paymentOption.card.ccExpYear || "", transactionId: e.transactionId, mcc: e.mcc || "", cancelled: !1 }, e.partialApproval && (t.partialApproval = e.partialApproval), n(t))) : n(fixIncorrectResult(r.responseText)) }, e.sourceApplication = b.sourceApplication || "WEB_SDK"; var t = callDtrum("enterAction", ["payment_started/payment_complete", void 0, Date.now()]); window.clintPaymentDoId = t, r.send(JSON.stringify(e))
                        }(e, t)
                    },
                    initGlobalpay: function (e, t, n, r) { if (void 0 === e) throw "please provide all parameters for initGlobalpay method"; if (void 0 === t) throw "please provide all parameters for initGlobalpay method"; if (void 0 === n) throw "please provide all parameters for initGlobalpay method"; if (void 0 === r) throw "please provide all parameters for initGlobalpay method"; var o = websdk_core.findSfcHost() + "fields/globalPay.js"; websdk_core.loadScript(o, function () { try { globalpay.init(e, t, n, b, r) } catch (e) { } }) },
                    enrollAccount: function (e, t) { sightline.sightlineEnrollAccount(S, e, t) }, authenticate3d: function (o, a) {
                        var i, s; function t() {
                            if (o.openAmount && delete o.openAmount, o.paymentOption.card, g.trace("---\x3e TRACE authenticate3d \n"), !o.merchantSiteId && b.merchantSiteId && (o.merchantSiteId = b.merchantSiteId), !o.merchantSiteId) throw new Error("Merchant site id is mandatory."); if (!o.merchantId && b.merchantId && (o.merchantId = b.merchantId), !o.merchantId) throw new Error("Merchant id is mandatory."); function n(e, n) {
                                var r; e.ccTempToken && (r = e.ccTempToken, delete e.ccTempToken), e.useDCC && (e.useDcc = e.useDCC, delete e.useDCC), e.hasOwnProperty("savePM") && (e.paymentOption.savePm = e.savePM, delete e.savePM); var o = callDtrum("enterAction", ["verify3d_started/verify3d_complete", void 0, Date.now()]), a = new XMLHttpRequest; a.open("POST", S + "/ppp/api/v1/clientAuthorize3d.do", !0), a.setRequestHeader("Content-Type", "application/json;charset=UTF-8"), a.timeout = 6e4, a.onerror = function () { callDtrum("leaveAction", [o, Date.now()]), n({ status: "ERROR", type: "network", code: "connection_timeout", errorDescription: A }) }, a.ontimeout = function () { return callDtrum("leaveAction", [o, Date.now()]), n({ error: { type: "network", code: "connection_timeout", message: A } }) }, a.onload = function () {
                                    var e, t; 200 === a.status ? (callDtrum("leaveAction", [o, Date.now()]), void 0 === (e = q(a.responseText)).all && (e.all = {}), e.all.sourceMethod = "authenticate3d", e.all.server = S, "ERROR" === e.status ? (e.error = { type: "card", code: e.errCode }, e.error.message = e.reason || "Process failed.", n(s(e))) : "SUCCESS" === e.status && (e.ccTempToken = r, e.paymentOption && e.paymentOption.card && e.paymentOption.card.threeD && e.paymentOption.card.threeD.acsUrl && (e.paymentOption.card.threeD.paRequest || e.paymentOption.card.threeD.cReq) ? (e.paymentOption.card.threeD.paRequest &&
                                        (e.paymentOption.card.threeD.termUrl = S + "/ppp/api/threeDSecure/completeVerify3d.do?sessionToken=" + e.sessionToken), k = e.paymentOption.card.threeD.acsUrl, websdk_core.onPaymentEvent({ eventType: "paymentStarted", threeD: { version: e.paymentOption.card.threeD.version || "", flow: "challenge" } }, b.onPaymentEvent, k, C, T), i.paymentFrame(e, function (e) { "undefined" != typeof tempData && tempData.paymentOption && tempData.paymentOption.card && tempData.paymentOption.card.threeD && tempData.paymentOption.card.threeD.version && (e.threeDVersion = tempData.paymentOption.card.threeD.version || "", delete window.tempData), n(s(e)) })) :
                                        (e.paymentOption = e.paymentOption || {}, e.paymentOption.card = e.paymentOption.card || {}, e.paymentOption.card.threeD = e.paymentOption.card.threeD || {}, websdk_core.onPaymentEvent({ eventType: "paymentStarted", threeD: { version: e.paymentOption.card.threeD.version || "", flow: "" } }, b.onPaymentEvent, k, C, T), t = { result: e.transactionStatus, errCode: e.gwExtendedErrorCode || e.gwErrorCode || e.paymentMethodErrorCode || e.errorCode || "0", errorDescription: e.gwErrorReason || e.paymentMethodErrorReason || e.errorDescription || "", userPaymentOptionId: e.paymentOption.userPaymentOptionId || "", cavv: e.paymentOption.card.threeD.cavv || "", eci: e.paymentOption.card.threeD.eci || "", xid: e.paymentOption.card.threeD.xid || "", dsTransID: e.paymentOption.card.threeD.dsTransID || "", ccCardNumber: e.paymentOption.card.ccCardNumber || "", bin: e.paymentOption.card.bin || "", last4Digits: e.paymentOption.card.last4Digits || "", ccExpMonth: e.paymentOption.card.ccExpMonth || "", ccExpYear: e.paymentOption.card.ccExpYear || "", threeDVersion: e.paymentOption.card.threeD.version || "", transactionId: e.transactionId, mcc: e.mcc || "", cancelled: !1 }, e.all && "authenticate3d" === e.all.sourceMethod && (t.ccTempToken = e.ccTempToken), n(s(t))))) : n(s(a.responseText))
                                },
                                    e.sourceApplication = b.sourceApplication || "WEB_SDK", a.send(JSON.stringify(e))
                            } var e = !1; try { e = navigator.javaEnabled() } catch (e) { } var t, r = { acceptHeader: "Y", userAgent: navigator.userAgent, javaEnabled: e, language: navigator.language, colorDepth: screen.colorDepth, screenHeight: screen.height, screenWidth: screen.width, timeZone: (new Date).getTimezoneOffset(), javaScriptEnabled: !0 };
                            b.sourceMethod = "authenticate3d", o.paymentOption && o.paymentOption.__makePayment ? (E && (o._validationState = E), o.browserDetails = r, o.sourceApplication = b.sourceApplication || "WEB_SDK_FIELDS", o.paymentOption.__makePayment(b, o, function (e) { e.threeDVersion = O, a(s(e)) })) : o.paymentOption && o.paymentOption.userPaymentOptionId && o.paymentOption.card && o.paymentOption.card.CVV && o.paymentOption.card.CVV.__makePayment ? (E && (o._validationState = E), o.browserDetails = r, o.sourceApplication = b.sourceApplication || "WEB_SDK_FIELDS", o.paymentOption.card.CVV.__makePayment(b, o, function (e) { a(s(e)) })) : (o.sourceApplication = b.sourceApplication ||
                                "WEB_SDK", (t = JSON.parse(JSON.stringify(o))).paymentOption = t.paymentOption || {}, t.paymentOption.useInitPayment = !0, delete t.shippingAddress, delete t.userDetails, delete t.useDCC, delete t.savePM, delete t.clientRequestId, b.blockCards && 0 < b.blockCards.length && t.paymentOption.card && t.paymentOption.card.cardNumber ? i.getCardDetails({ sessionToken: b.sessionToken, merchantId: b.merchantId, merchantSiteId: b.merchantSiteId, cardNumber: t.paymentOption.card.cardNumber }, function (e) {
                                    if ("ERROR" === e.status || e.error && "ERROR" === e.error.status) { if (!0 === b.strictCardBlocking) return void a(s({ result: "ERROR", errCode: e.errCode || "0", errorDescription: e.errorDescription || e.reason || e.error && e.error.message || "" })) }
                                    else if (x(b.blockCards, e)) return void a(s({ errCode: -6, result: "ERROR", errDescription: _ })); i.initPayment(t, function (e) {
                                        o.paymentOption = o.paymentOption || {}, window.tempData = e; var t = JSON.parse(JSON.stringify(o)); t.paymentOption = t.paymentOption || {}, t.paymentOption.card = t.paymentOption.card || {}, e.paymentOption && (t.ccTempToken = e.paymentOption.card.ccTempToken), delete t.currency, delete t.amount; e.paymentOption && e.paymentOption.card && e.paymentOption.card.threeD && (t.paymentOption.card.threeD = t.paymentOption.card.threeD || {},
                                            t.paymentOption.card.threeD.v2AdditionalParams = t.paymentOption.card.threeD.v2AdditionalParams || {}, t.paymentOption.card.threeD.browserDetails = r, t.paymentOption.card.threeD.v2AdditionalParams.challengeWindowSize = "05", t.paymentOption.card.threeD.platformType = "02", t.paymentOption.card.threeD.isDynamic3D = 0, "true" === e.paymentOption.card.threeD.v2supported && (t.relatedTransactionId = e.transactionId, t.paymentOption.card.threeD.notificationURL = S + "/ppp/api/threeDSecure/completeVerify3d.do?sessionToken=" + o.sessionToken), e.paymentOption.card.threeD.version && (t.paymentOption.card.threeD.version = e.paymentOption.card.threeD.version), e.paymentOption.card.threeD.methodCompletionInd && (t.paymentOption.card.threeD.methodCompletionInd = e.paymentOption.card.threeD.methodCompletionInd), t.paymentOption.card.threeD.version), e.paymentOption && e.paymentOption.card && e.paymentOption.card.threeD && "false" === e.paymentOption.card.threeD.v2supported &&
                                            (websdk_core.onPaymentEvent({ eventType: "3DSupported", threeD: { threeDSupported: "false" } }, b.onPaymentEvent, k, C, T), delete t.paymentOption.card.threeD), e.paymentOption && e.paymentOption.card && e.paymentOption.card.threeD && "true" === e.paymentOption.card.threeD.v2supported ? n(t, a) : a(s({ errorDescription: R }))
                                    })
                                }) : i.initPayment(t, function (e) {
                                    o.paymentOption = o.paymentOption || {}, window.tempData = e; var t = JSON.parse(JSON.stringify(o)); t.paymentOption = t.paymentOption || {}, t.paymentOption.card = t.paymentOption.card || {}, e.paymentOption &&
                                        (t.ccTempToken = e.paymentOption.card.ccTempToken), delete t.currency, delete t.amount; e.paymentOption && e.paymentOption.card && e.paymentOption.card.threeD && (t.paymentOption.card.threeD = t.paymentOption.card.threeD || {}, t.paymentOption.card.threeD.v2AdditionalParams = t.paymentOption.card.threeD.v2AdditionalParams || {}, t.paymentOption.card.threeD.browserDetails = r, t.paymentOption.card.threeD.v2AdditionalParams.challengeWindowSize = "05", t.paymentOption.card.threeD.platformType = "02", t.paymentOption.card.threeD.isDynamic3D = 0,
                                            "true" === e.paymentOption.card.threeD.v2supported && (t.relatedTransactionId = e.transactionId, t.paymentOption.card.threeD.notificationURL = S + "/ppp/api/threeDSecure/completeVerify3d.do?sessionToken=" + o.sessionToken), e.paymentOption.card.threeD.version && (t.paymentOption.card.threeD.version = e.paymentOption.card.threeD.version), e.paymentOption.card.threeD.methodCompletionInd && (t.paymentOption.card.threeD.methodCompletionInd = e.paymentOption.card.threeD.methodCompletionInd), t.paymentOption.card.threeD.version), e.paymentOption && e.paymentOption.card && e.paymentOption.card.threeD && "false" === e.paymentOption.card.threeD.v2supported && (delete t.paymentOption.card.threeD, websdk_core.onPaymentEvent({ eventType: "3DSupported", threeD: { threeDSupported: "false" } },
                                                b.onPaymentEvent, k, C, T)), e.paymentOption && e.paymentOption.card && e.paymentOption.card.threeD && "true" === e.paymentOption.card.threeD.v2supported ? n(t, a) : a(s({ errorDescription: R }))
                                }))
                        } !0 !== P.isProcessing ? (P.isProcessing = !0, T = n(o), websdk_core.onPaymentEvent({ eventType: "initiated" }, b.onPaymentEvent, k, C, T), o.paymentOption.peers ? o.paymentOption.peers.ccCvc ? callDtrum("sendSessionProperties", [null, null, { fieldstype: "WEB_SDK_THREE_FIELDS" }, null]) : callDtrum("sendSessionProperties", [null, null, { fieldstype: "WEB_SDK_ONE_FIELDS" }, null]) : callDtrum("sendSessionProperties", [null, null, { fieldstype: "WEB_SDK_NOFIELDS" }, null]), o.billingAddress && o.billingAddress.email ? (callDtrum("sendSessionProperties", [null, null, {
                            usertokenid: o.billingAddress.email
                        }, null]), callDtrum("identifyUser", [o.billingAddress.email + " / " + b.merchantId])) : callDtrum("identifyUser", [UUIDjs.create().hex.split("-")[0] + " / " + b.merchantId]), o.sessionToken && callDtrum("sendSessionProperties", [null, null, { sessiontoken: o.sessionToken }, null]), i = this, s = function (e) { return setTimeout(function () { callDtrum("endSession") }, 1e3), setTimeout(function () { callDtrum("disable") }, 2e3), P = {}, e }, o.openAmount ? this.setOpenAmount({ sessionToken: b.sessionToken, merchantId: b.merchantId, merchantSiteId: b.merchantSiteId, amount: o.openAmount, currency: o.currency, clientRequestId: o.clientRequestId || Math.ceil(1e16 * Math.random()), clientUniqueId: o.clientUniqueId }, function (e) { "ERROR" === e.status ? a(s(e)) : t() }) : t()) : a({ processingOrder: !0 })
                    }, getApms: function (e, t) {
                        g.info("---\x3e sfc.getAmps() input object---------------------- \n" + JSON.stringify(e, null, 4)), g.trace("---\x3e sfc.getAmps() stack trace---------------------- \n"); var n = callDtrum("enterAction", ["getApms", void 0, Date.now()]), r = new XMLHttpRequest; r.open("POST", S + "/ppp/api/v1/getMerchantPaymentMethods.do", !0), r.setRequestHeader("Content-Type", "application/json;charset=UTF-8"), r.timeout = 6e4, r.onerror = function () { callDtrum("leaveAction", [n, Date.now()]), t({ status: "ERROR", type: "network", code: "connection_timeout", errorDescription: A }) }, r.ontimeout = function () { return callDtrum("leaveAction", [n, Date.now()]), t({ error: { type: "network", code: "connection_timeout", message: A } }) }, r.onload = function () { callDtrum("leaveAction", [n, Date.now()]), 200 === r.status ? t(q(r.responseText)) : t(r.responseText) }; var o = {
                            sessionToken: b.sessionToken || e.sessionToken, merchantSiteId: b.merchantSiteId || e.merchantSiteId, merchantId: b.merchantId || e.merchantId, timeStamp: (new Date).getTime(), clientRequestId: e.clientRequestId || Math.ceil(1e16 * Math.random())
                        }; o.type = e.type || "DEPOSIT", e.currencyCode && (o.currencyCode = e.currencyCode), e.countryCode && (o.countryCode = e.countryCode), e.ipAddress && (o.ipAddress = e.ipAddress), o.languageCode = e.languageCode || "en", r.send(JSON.stringify(o))
                    }, getUserUPOs: function (e) {
                        g.trace("---\x3e sfc.getUserUPOs() stack trace---------------------- \n"); var t = callDtrum("enterAction", ["getUserUPOs", void 0, Date.now()]),
                            n = new XMLHttpRequest; n.open("POST", S + "/ppp/api/v1/websdk/clientGetUserUPOs.do", !0), n.setRequestHeader("Content-Type", "application/json;charset=UTF-8"), n.timeout = 6e4, n.onerror = function () { callDtrum("leaveAction", [t, Date.now()]), e({ status: "ERROR", type: "network", code: "connection_timeout", errorDescription: A }) }, n.ontimeout = function () { return callDtrum("leaveAction", [t, Date.now()]), e({ error: { type: "network", code: "connection_timeout", message: A } }) }, n.onload = function () { callDtrum("leaveAction", [t, Date.now()]), 200 === n.status ? e(q(n.responseText)) : e(n.responseText) }; var r = { sessionToken: b.sessionToken, merchantSiteId: b.merchantSiteId, merchantId: b.merchantId, clientRequestId: Math.ceil(1e16 * Math.random()) };
                        n.send(JSON.stringify(r))
                    }, clientGetDccDetails: function (e, t) {
                        if (e.cardNumber && e.cardNumber.__getDCC) e.cardNumber.__getDCC(b, e, t); else if (!0 === e.useFields) { var n, r = []; for (n in v) "ccNumber" === v[n].field && r.push(v[n]); r.pop().__getDCC(b, e, t) } else {
                            var o = new XMLHttpRequest; o.open("POST", S + "/ppp/api/v1/websdk/clientGetDccDetails.do", !0), o.setRequestHeader("Content-Type", "application/json;charset=UTF-8"), o.timeout = 6e4, o.onerror = function () { t({ status: "ERROR", type: "network", code: "connection_timeout", errorDescription: A }) },
                                o.ontimeout = function () { return t({ error: { type: "network", code: "connection_timeout", message: A } }) }, o.onload = function () { 200 === o.status ? t(q(o.responseText)) : t(o.responseText) }; var a = { sessionToken: b.sessionToken || e.sessionToken, merchantSiteId: b.merchantSiteId || e.merchantSiteId, merchantId: b.merchantId || e.merchantId, clientRequestId: e.clientRequestId || Math.ceil(1e16 * Math.random()), clientUniqueId: e.clientUniqueId, currency: e.currency, country: e.country }; e.cardNumber ? a.cardNumber = e.cardNumber : e.userPaymentOptionId ? a.userPaymentOptionId = e.userPaymentOptionId : a.apm = e.apm, o.send(JSON.stringify(a))
                        }
                    }, getCardDetails: function (e, t) {
                        if (e.cardNumber && e.cardNumber.
                            __getCardDetails) e.cardNumber.__getCardDetails(b, e, t); else if (!0 === e.useFields) { var n, r = []; for (n in v) "ccNumber" === v[n].field && r.push(v[n]); r.pop().__getCardDetails(b, e, t) } else {
                                var o = new XMLHttpRequest; o.open("POST", S + "/ppp/api/v1/getCardDetails.do", !0), o.setRequestHeader("Content-Type", "application/json;charset=UTF-8"), o.timeout = 6e4, o.onerror = function () { t({ status: "ERROR", type: "network", code: "connection_timeout", errorDescription: A }), l({ errorDescription: A }) }, o.ontimeout = function () {
                                    return l({ errorDescription: A }), t({
                                        error: { status: "ERROR", type: "network", code: "connection_timeout", message: A }
                                    })
                                }, o.onload = function () { var e = q(o.responseText); t(e), l(e) }; var a = { sessionToken: b.sessionToken || e.sessionToken, merchantSiteId: b.merchantSiteId || e.merchantSiteId, merchantId: b.merchantId || e.merchantId, clientRequestId: e.clientRequestId || Math.ceil(1e16 * Math.random()), clientUniqueId: e.clientUniqueId }; e.userPaymentOptionId && (a.userPaymentOptionId = e.userPaymentOptionId), e.cardNumber && (a.cardNumber = e.cardNumber), o.send(JSON.stringify(a))
                            }
                    }, accountCapture: function (e, t) {
                        var n = null; !0 === D.showAccountCapture && (window.skipGetPayoutStatus = !0, n = openWindow(D.sessionToken, S, t)); var r = new XMLHttpRequest; r.open("POST", S + "/ppp/api/v1/accountCapture.do", !0), r.setRequestHeader("Content-Type",
                            "application/json;charset=UTF-8"), r.timeout = 6e4, r.onerror = function () { n && n.close(), t({ status: "ERROR", type: "network", code: "connection_timeout", errorDescription: A }) }, r.ontimeout = function () { return n && n.close(), t({ error: { type: "network", code: "connection_timeout", message: A } }) }, r.onload = function () { var e; 200 === r.status ? ((e = q(r.responseText)).openInExternalBrowser && "true" === e.openInExternalBrowser && e.redirectUrl && (e.redirectUrl = S + "/ppp/forwarder.html?open_in_browser=true&link=" + encodeURIComponent(e.redirectUrl)), !0 === D.showAccountCapture ? e.redirectUrl ? (n.location = e.redirectUrl, t(e)) : n && (n.close(), t(e)) : (n && n.close(), t(e))) : (n && n.close(), t(r.responseText)) }; var o = {
                                sessionToken: b.sessionToken || e.sessionToken, merchantSiteId: b.merchantSiteId || e.merchantSiteId, merchantId: b.merchantId || e.merchantId, amount: e.amount, paymentMethod: e.paymentMethod, userTokenId: e.userTokenId, countryCode: e.countryCode, currencyCode: e.currencyCode, languageCode: e.languageCode, notificationUrl: e.notificationUrl,
                                sourceApplication: e.sourceApplication, userDetails: e.userDetails, urlDetails: e.urlDetails, deviceDetails: e.deviceDetails
                            }, a = "https://cdn.safecharge.com/safecharge_resources/v1/websdk/autoclose.html"; !0 !== D.showAccountCapture || e.urlDetails || (o.urlDetails = { successUrl: a, failureUrl: a, pendingUrl: a }), r.send(JSON.stringify(o))
                    }, buildApplePaySession: function (e, t, n) { if (!e.merchantSiteId && e.merchantSiteId && (e.merchantSiteId = b.merchantSiteId), !e.merchantSiteId) throw new Error("Merchant site id is mandatory."); if (!e.merchantId && b.merchantId && (e.merchantId = b.merchantId), !e.merchantId) throw new Error("Merchant id is mandatory."); if (!e.env && b.env && (e.env = b.env), !e.env) throw new Error("env is mandatory."); e = { merchantSiteId: e.merchantSiteId, server: S, merchantCapabilities: e.merchantCapabilities || null, collectUserDetails: "true" === e.collectUserDetails ? "true" : "false", supportedNetworks: e.supportedNetworks, countryCode: e.countryCode, currencyCode: e.currencyCode, total: { label: e.total.label, amount: e.total.amount } }; (new applePay).buildSession(e, t, n).begin() },
                    createApplePayPaymentWithoutBuildSession: function (e, t) { I = e.completion, "true" !== e.collectUserDetails && delete e.shippingAndBillingDetails, this.createPayment({ sessionToken: e.sessionToken || b.sessionToken, merchantId: e.merchantId || b.merchantId, merchantSiteId: e.merchantSiteId || b.merchantSiteId, userId: e.userId, amount: e.amount, currency: e.currency || e.currencyCode, useDcc: e.useDCC, paymentOption: e.paymentOption, billingAddress: e.shippingAndBillingDetails || e.billingAddress, userDetails: e.userDetails, shippingAddress: e.shippingAndBillingDetails || e.shippingAddress, applePay3Dflow: e.applePay3Dflow }, function (e) { e.result && "APPROVED" === e.result ? I && I(!0) : I && I(!1), t(e) }) },
                    createApplePayPayment: function (n, r) {
                        if (!n.merchantSiteId && n.merchantSiteId && (n.merchantSiteId = b.merchantSiteId), !n.merchantSiteId) throw new Error("Merchant site id is mandatory."); if (!n.merchantId && b.merchantId && (n.merchantId = b.merchantId), !n.merchantId) throw new Error("Merchant id is mandatory."); if (!n.env && b.env && (n.env = b.env), !n.env) throw new Error("env is mandatory."); var e = { merchantSiteId: n.merchantSiteId, server: S, collectUserDetails: "true" === n.collectUserDetails ? "true" : "false", merchantCapabilities: n.merchantCapabilities || null, supportedNetworks: n.supportedNetworks, countryCode: n.countryCode, currencyCode: n.currencyCode, total: { label: n.total.label, amount: n.total.amount } }; T = "ppp_ApplePay"; var o = this; (new applePay).buildSession(e, function (e, t) {
                            I = t, "true" !== n.collectUserDetails && delete e.shippingAndBillingDetails, o.
                                createPayment({ sessionToken: n.sessionToken || b.sessionToken, merchantId: n.merchantId || b.merchantId, merchantSiteId: n.merchantSiteId || b.merchantSiteId, userId: n.userId, amount: n.amount, currency: n.currency || n.currencyCode, useDcc: n.useDCC, billingAddress: e.shippingAndBillingDetails || n.billingAddress, userDetails: n.userDetails, shippingAddress: e.shippingAndBillingDetails || n.shippingAddress, applePay3Dflow: n.applePay3Dflow, paymentOption: { paymentMethod: "ppp_ApplePay", card: { externalToken: { externalTokenProvider: "ApplePay", mobileToken: JSON.stringify(e.token) } } } }, function (e) { e.result && "APPROVED" === e.result ? I && I(!0) : I && I(!1), r(e) })
                        }, r).begin()
                    },
                    createPayment: function (h, f) {
                        var v, g, O = function (e) {
                            P = {}; return h && h.paymentOption && h.paymentOption.paymentMethod, e.transactionType && "auth" !== e.transactionType.toLowerCase() && "sale" !== e.transactionType.toLowerCase() && (e.transactionStatus = "ERROR", e.errCode = "-5", e.gwExtendedErrorCode = "-5", e.errorDescription = "General 3D error", e.result = "ERROR"), setTimeout(function () { callDtrum("endSession") }, 1e3),
                                setTimeout(function () { callDtrum("disable") }, 2e3), e
                        }; function t() {
                            if (h.openAmount && delete h.openAmount, !h.merchantSiteId && b.merchantSiteId && (h.merchantSiteId = b.merchantSiteId), !h.merchantSiteId) throw new Error("Merchant site id is mandatory."); if (!h.merchantId && b.merchantId && (h.merchantId = b.merchantId), !h.merchantId) throw new Error("Merchant id is mandatory.");
                            var e = { apmgw_WeBanq: !0, apmgw_Moneta__Direct_Integration_: !0, apmgw_Todito_Cash_Direct_Integration_: !0, apmgw_Webmoney_SMS_Invoice_: !0, entropay: !0, visa_checkout: !0, apmgw_Venmo: !0, apmgw_WeChat_QuickPay: !0, apmgw_AstropayPrePaid: !0, apmgw_AliPay_Barcode: !0, apmgw_BLIK: !0, apmgw_MuchBetter: !0, apmgw_eCheck: !0, apmgw_MBWAY: !0, apmgw_Playtech_Prepaidcard: !0, apmgw_PlayPlus: !0, apmgw_VIP_Preferred: !0, apmgw_ACH: !0, apmgw_Abon: !0, apmgw_OKTO_WALLET: !0 }, t = "pppApmWindow_" + (new Date).
                                getTime(), a = null; window.skipGetPaymentStatus = !1; function n(e, n) {
                                    var r = e.apmWindowType; e.hasOwnProperty("useDCC") && (e.useDcc = e.useDCC, delete e.useDCC), e.paymentOption && e.paymentOption.card && e.paymentOption.card.threeD && e.paymentOption.card.externalToken && ("GooglePay" === e.paymentOption.card.externalToken.externalTokenProvider || "ApplePay" === e.paymentOption.card.externalToken.externalTokenProvider) && (C || (delete e.paymentOption.card.threeD, delete e.relatedTransactionId)), e && e.paymentOption && e.paymentOption.alternativePaymentMethod && e.paymentOption.alternativePaymentMethod.paymentMethod && "visa_checkout" === e.paymentOption.alternativePaymentMethod.paymentMethod && delete e.paymentOption.alternativePaymentMethod, e.hasOwnProperty("savePM") && (e.paymentOption.savePm = e.savePM, delete e.savePM); var o = new
                                        XMLHttpRequest; o.open("POST", S + "/ppp/api/v1/clientPayment.do", !0), o.setRequestHeader("Content-Type", "application/json;charset=UTF-8"), o.timeout = 6e4, o.onerror = function () { callDtrum("leaveAction", [window.clintPaymentDoId, Date.now()]), g(), a && a.close(), n(O({ status: "ERROR", type: "network", code: "connection_timeout", errorDescription: A })) },
                                            o.ontimeout = function () { return callDtrum("leaveAction", [window.clintPaymentDoId, Date.now()]), g(), a && a.close(), n(O({ error: { type: "network", code: "connection_timeout", message: A } })) }, o.onload = function () {
                                                if (callDtrum("leaveAction", [window.clintPaymentDoId, Date.now()]), g(), 200 === o.status) {
                                                    if (void 0 === (t = q(o.responseText)).all && (t.all = {}), t.all.sourceMethod = "createPayment", t.all.server = S, "ERROR" === t.status) { if (a) { if (1058 === t.errCode) return P = {}, a.close(), void n(t); a.close() } t.error = { type: "card", code: t.errCode }, t.error.message = t.reason || "Process failed.", n(O(t)) }
                                                    else if ("SUCCESS" === t.status) if (t.paymentOption && t.paymentOption.card && t.paymentOption.card.threeD && t.paymentOption.card.threeD.acsUrl && (t.paymentOption.card.threeD.paRequest || t.paymentOption.card.threeD.cReq)) t.paymentOption.card.threeD.paRequest && (t.paymentOption.card.threeD.termUrl = S + "/ppp/api/threeDSecure/completePayment.do?sessionToken=" + t.sessionToken), I && (I(!0), I = !1), k = t.paymentOption.card.threeD.acsUrl, websdk_core.onPaymentEvent({ eventType: "paymentStarted", threeD: { version: t.paymentOption.card.threeD.version || "", flow: "challenge" } }, b.onPaymentEvent, k, C, T), v.paymentFrame(t, function (e) { n(O(e)) }); else {
                                                        var e = { eventType: "paymentStarted" }; if (t.paymentOption && t.paymentOption.card && t.paymentOption.card.threeD && (e.threeD = { version: t.paymentOption.card.threeD.version || "", flow: "" }, k = t.paymentOption.card.threeD.acsUrl || ""), websdk_core.onPaymentEvent(e, b.onPaymentEvent, k, C, T), t.paymentOption = t.paymentOption || {}, t.openInExternalBrowser && "true" === t.openInExternalBrowser && t.paymentOption && t.paymentOption.redirectUrl && (t.paymentOption.redirectUrl = S + "/ppp/forwarder.html?open_in_browser=true&link=" +
                                                            encodeURIComponent(t.paymentOption.redirectUrl)), "REDIRECT" === t.transactionStatus) "redirect" === r ? (window.skipGetPaymentStatus = !1, window.top.location = t.paymentOption.redirectUrl, websdk_core.onPaymentEvent({ eventType: "redirectionStarted" }, b.onPaymentEvent, k, C, T)) : "customRedirect" === r ? n(O(t)) : (window.skipGetPaymentStatus = !1, a.location = t.paymentOption.redirectUrl, websdk_core.onPaymentEvent({ eventType: "redirectionStarted" }, b.onPaymentEvent, k, C, T)); else {
                                                            if ("ERROR" === t.transactionStatus || "DECLINED" === t.transactionStatus || null == t.transactionStatus) try { a && a.close() } catch (e) { } if (1069 === t.errCode) try { a.close() } catch (e) { } t.paymentOption = t.paymentOption || {}, t.paymentOption.card = t.paymentOption.card || {}, t.paymentOption.card.threeD = t.paymentOption.card.threeD || {}; var t, e = {
                                                                result: (t = O(t)).transactionStatus, errCode: t.gwExtendedErrorCode || t.gwErrorCode || t.paymentMethodErrorCode || t.errorCode || "0", errorDescription: t.gwErrorReason || t.paymentMethodErrorReason || t.errorDescription || "",
                                                                userPaymentOptionId: t.paymentOption.userPaymentOptionId, ccCardNumber: t.paymentOption.card.ccCardNumber, bin: t.paymentOption.card.bin, last4Digits: t.paymentOption.card.last4Digits || "", ccExpMonth: t.paymentOption.card.ccExpMonth || "", ccExpYear: t.paymentOption.card.ccExpYear || "", cavv: t.paymentOption.card.threeD.cavv || "", eci: t.paymentOption.card.threeD.eci || "", xid: t.paymentOption.card.threeD.xid || "", dsTransID: t.paymentOption.card.threeD.dsTransID || "", transactionId: t.transactionId, transactionStatus: t.transactionStatus, transactionType: t.transactionType, mcc: t.mcc || "", cancelled: !1
                                                            }; t.partialApproval && (e.partialApproval = t.partialApproval), n(e)
                                                        }
                                                    }
                                                } else n(O(o.responseText))
                                            }, delete e.apmWindowType, e.sourceApplication = b.sourceApplication || "WEB_SDK"; var t = callDtrum("enterAction", ["payment_started/payment_complete", void 0, Date.now()]); window.clintPaymentDoId = t, o.send(JSON.stringify(e))
                                } var r = !1; try { r = navigator.javaEnabled() } catch (e) { } var o = {
                                    acceptHeader: "Y", userAgent: navigator.userAgent, javaEnabled: r, language: navigator.language, colorDepth: screen.colorDepth, screenHeight: screen.height, screenWidth: screen.width,
                                    timeZone: (new Date).getTimezoneOffset(), javaScriptEnabled: !0
                                }; if (b.sourceMethod = "createPayment", h.paymentOption && h.paymentOption.__makePayment) E && (h._validationState = E), h.browserDetails = o, h.sourceApplication = b.sourceApplication || "WEB_SDK_FIELDS", h.paymentOption.__makePayment(b, h, function (e) { f(O(e)) }); else if (h.paymentOption && h.paymentOption.userPaymentOptionId && h.paymentOption.card && h.paymentOption.card.CVV && h.paymentOption.card.CVV.__makePayment) E && (h._validationState = E), h.browserDetails = o, h.sourceApplication = b.sourceApplication || "WEB_SDK_FIELDS", h.paymentOption.card.CVV.__makePayment(b, h, function (e) { f(O(e)) });
                                else if (h.paymentOption && h.paymentOption.alternativePaymentMethod && h.paymentOption.alternativePaymentMethod.paymentMethod && v.getDirectUPOs()[h.paymentOption.alternativePaymentMethod.paymentMethod] && h.paymentOption.userPaymentOptionId) delete h._validationState, n(h, f); else if (h.paymentOption && h.paymentOption.alternativePaymentMethod && h.paymentOption.alternativePaymentMethod.paymentMethod && !e[h.paymentOption.alternativePaymentMethod.paymentMethod] && !h.isDirectAPM && "redirect" !== h.apmWindowType) {
                                    delete h._validationState, h.billingAddress && h.billingAddress.email && h.paymentOption.subMethod && void 0 === h.paymentOption.subMethod.email && "skrill1tap" === h.paymentOption.subMethod.subMethod.toLocaleLowerCase() && (h.paymentOption.subMethod.email = h.billingAddress.email); var i, s = 0; "object" != typeof D.pollApm || "object" == typeof (m = D.pollApm[h.paymentOption.alternativePaymentMethod.paymentMethod]) && m.pollingCount ===
                                        parseInt(m.pollingCount, 10) && m.pollingTime === parseInt(m.pollingTime, 10) && (i = m.pollingCount, s = m.pollingTime); var c = !0; clearTimeout(w); var p = { w: 800, h: 600 }, d = p.w, r = p.h, l = screen.width / 2 - d / 2, m = screen.height / 2 - r / 2, p = websdk_core.findSfcHost() + "preloader.html?" + (new Date).getTime(); h.apmPopupWindow ? (a = h.apmPopupWindow, delete h.apmPopupWindow) : "newTab" === h.apmWindowType ? a = window.open(p, t) : "customRedirect" !== h.apmWindowType && (a = window.open(p, t, "height=" + r + ",width=" + d + ",top=" + m + ",left=" + l + ",toolbar=yes,location=no,directories=no,status=no,menubar=no,linemenubar=no,scrollbars=yes,resizable=yes,modal=yes")), !a && void 0 === event || !a && event && event.isTrusted, window.popupAPM = a, window.skipGetPaymentStatus = !0; var u = function () {
                                            websdk_core.onPaymentEvent({ eventType: "redirectionEnded" },
                                                b.onPaymentEvent, k, C, T); var r = new XMLHttpRequest; r.open("POST", S + "/ppp/api/v1/getPaymentStatus.do", !0), r.setRequestHeader("Content-Type", "application/json;charset=UTF-8"), r.timeout = 6e4, r.onerror = function () { f({ status: "ERROR", type: "network", code: "connection_timeout", errorDescription: A }) }, r.ontimeout = function () { return f({ error: { type: "network", code: "connection_timeout", message: A } }) }, r.onload = function () {
                                                    var e, t, n; 200 === r.status && (n = (t = (e = O(JSON.parse(r.response))).paymentOption || {}).card || {}, delete e.userTokenId, n = Object.assign(e, { result: e.transactionStatus || e.status, errCode: e.gwExtendedErrorCode || e.gwErrorCode || e.paymentMethodErrorCode || e.errorCode || e.errCode || "0", errorDescription: e.gwErrorReason || e.paymentMethodErrorReason || e.errorDescription || e.reason || "", userPaymentOptionId: t.userPaymentOptionId, ccCardNumber: n.ccCardNumber || "", bin: n.bin || "", last4Digits: n.last4Digits || "", ccExpMonth: n.ccExpMonth || "", ccExpYear: n.ccExpYear || "", transactionId: e.transactionId, cancelled: !1 }),
                                                        e.transactionStatus ? delete e.transactionStatus : e.status && delete e.status, e.gwExtendedErrorCode ? delete e.gwExtendedErrorCode : e.gwErrorCode ? delete e.gwErrorCode : e.paymentMethodErrorCode ? delete e.paymentMethodErrorCode : e.errorCode && delete e.errorCode, e.gwErrorReason ? delete e.gwErrorReason : e.paymentMethodErrorReason ? delete e.paymentMethodErrorReason : n.errorDescription === e.reason && delete e.reason, c ? (c = !1, f(n)) : "PENDING" === n.result || "ERROR" === n.result || 9072 === n.errCode || f(n), i && "PENDING" === n.result && (w =
                                                            setTimeout(u, 1e3 * s), i--))
                                                }, r.send(JSON.stringify({ sessionToken: h.sessionToken }))
                                        }.bind(this); !function e(t, n) { window.setTimeout(function () { null == t || null == t.closed || 1 == t.closed ? window.skipGetPaymentStatus || n() : e(t, n) }, 200) }(a, u), n(h, f)
                                } else if (h.paymentOption && h.paymentOption.alternativePaymentMethod && h.paymentOption.alternativePaymentMethod.paymentMethod && e[h.paymentOption.alternativePaymentMethod.paymentMethod] || h.paymentOption && h.paymentOption.alternativePaymentMethod && h.paymentOption.alternativePaymentMethod.paymentMethod && "redirect" === h.apmWindowType || h.paymentOption && h.paymentOption.card && h.paymentOption.card.externalToken && h.paymentOption.card.externalToken.externalTokenProvider &&
                                    "GooglePay" !== h.paymentOption.card.externalToken.externalTokenProvider && "ApplePay" !== h.paymentOption.card.externalToken.externalTokenProvider) delete h._validationState, n(h, f); else {
                                    var y = JSON.parse(JSON.stringify(h)); if (y.paymentOption = y.paymentOption || {}, y.paymentOption.useInitPayment = !0, delete y.shippingAddress, delete y.userDetails, delete y.useDCC, delete y.savePM, delete y._validationState, delete y.clientRequestId, delete y.applePay3Dflow, delete y.googlePay3Dflow, b.blockCards && 0 < b.blockCards.length && y.paymentOption.card && y.paymentOption.card.cardNumber) v.getCardDetails({ sessionToken: b.sessionToken, merchantId: b.merchantId, merchantSiteId: b.merchantSiteId, cardNumber: y.paymentOption.card.cardNumber }, function (e) {
                                        if ("ERROR" === e.status || e.error && "ERROR" === e.error.status) { if (!0 === b.strictCardBlocking) return void f(O({ result: "ERROR", errCode: e.errCode || "0", errorDescription: e.errorDescription || e.reason || e.error && e.error.message || "" })) } else if (x(D.blockCards, e)) return void f(O({ errCode: -6, result: "ERROR", errDescription: _ })); v.initPayment(y, function (e) {
                                            var t; e.paymentOption && e.paymentOption.card && e.paymentOption.card.threeD && "false" === e.paymentOption.card.threeD.v2supported && websdk_core.onPaymentEvent({ eventType: "3DSupported", threeD: { threeDSupported: "false" } }, b.onPaymentEvent, k, C, T), !0 === b.force3D && e.paymentOption && e.paymentOption.card && e.paymentOption.card.threeD && void 0 === e.paymentOption.card.threeD.v2supported ? f(O(e)) : !0 === b.force3D && e.paymentOption && e.paymentOption.card && e.paymentOption.card.threeD && "false" === e.paymentOption.card.threeD.v2supported ? f(O({ errorDescription: R }))
                                                : (h.paymentOption = h.paymentOption || {}, (t = JSON.parse(JSON.stringify(h))).paymentOption = t.paymentOption || {}, t.paymentOption.card = t.paymentOption.card || {}, delete t.currency, delete t.amount, e.paymentOption && e.paymentOption.card && e.paymentOption.card.threeD && (t.paymentOption.card.threeD = t.paymentOption.card.threeD || {}, t.paymentOption.card.threeD.v2AdditionalParams = t.paymentOption.card.threeD.v2AdditionalParams || {}, t.paymentOption.card.threeD.browserDetails = o, t.paymentOption.card.threeD.v2AdditionalParams.challengeWindowSize = "05", t.paymentOption.card.threeD.platformType = "02", "true" === e.paymentOption.card.threeD.v2supported && (t.relatedTransactionId = e.transactionId, t.paymentOption.card.threeD.notificationURL = S + "/ppp/api/threeDSecure/completePayment.do?sessionToken=" + e.sessionToken), e.paymentOption.card.threeD.version && (t.paymentOption.card.threeD.version = e.paymentOption.card.threeD.version), e.paymentOption.card.threeD.methodCompletionInd && (t.paymentOption.card.threeD.methodCompletionInd = e.paymentOption.card.threeD.methodCompletionInd)), e.paymentOption && e.paymentOption.card && e.paymentOption.card.threeD && "false" === e.paymentOption.card.threeD.v2supported &&
                                                    delete t.paymentOption.card.threeD, n(t, f))
                                        })
                                    }); else {
                                        l = h.applePay3Dflow, e = h.googlePay3Dflow; if (delete h.applePay3Dflow, delete h.googlePay3Dflow, h.paymentOption && h.paymentOption.card && h.paymentOption.card.externalToken && ("GooglePay" === h.paymentOption.card.externalToken.externalTokenProvider && "disable" === e || "ApplePay" === h.paymentOption.card.externalToken.externalTokenProvider && "enable" !== l)) { l = JSON.parse(JSON.stringify(h)); return delete l.currency, delete l.amount, void n(l, f) } v.initPayment(y, function (e) {
                                            var t; e.paymentOption && e.paymentOption.card && e.paymentOption.card.threeD && "false" === e.paymentOption.card.threeD.v2supported && websdk_core.onPaymentEvent({ eventType: "3DSupported", threeD: { threeDSupported: "false" } }, b.onPaymentEvent, k, C, T), !0 === D.force3D && e.paymentOption && e.paymentOption.card && e.paymentOption.card.threeD && void 0 === e.paymentOption.card.threeD.v2supported ? f(O(e)) : !0 === D.force3D && e.paymentOption && e.paymentOption.card && e.paymentOption.card.threeD && "false" === e.paymentOption.card.threeD.v2supported ? f(O({ errorDescription: R })) : (h.paymentOption = h.paymentOption || {}, (t = JSON.parse(JSON.stringify(h))).paymentOption = t.paymentOption || {}, t.paymentOption.card = t.paymentOption.card || {}, delete t.currency, delete t.amount, e.paymentOption && e.paymentOption.card && e.paymentOption.card.threeD && (t.paymentOption.card.threeD = t.paymentOption.card.threeD || {}, t.paymentOption.card.threeD.v2AdditionalParams = t.paymentOption.card.threeD.v2AdditionalParams || {}, t.paymentOption.card.threeD.browserDetails = o, t.paymentOption.card.threeD.v2AdditionalParams.challengeWindowSize = "05", t.paymentOption.card.threeD.platformType = "02", "true" === e.paymentOption.card.threeD.v2supported &&
                                                (t.relatedTransactionId = e.transactionId, t.paymentOption.card.threeD.notificationURL = S + "/ppp/api/threeDSecure/completePayment.do?sessionToken=" + e.sessionToken), e.paymentOption.card.threeD.version && (t.paymentOption.card.threeD.version = e.paymentOption.card.threeD.version), e.paymentOption.card.threeD.methodCompletionInd && (t.paymentOption.card.threeD.methodCompletionInd = e.paymentOption.card.threeD.methodCompletionInd)), e.paymentOption && e.paymentOption.card && e.paymentOption.card.threeD && "false" === e.paymentOption.card.threeD.v2supported && delete t.paymentOption.card.threeD, n(t, f)
                                            )
                                        })
                                    }
                                }
                        }
                        T = n(h), websdk_core.onPaymentEvent({ eventType: "initiated" }, b.onPaymentEvent, k, C, T), !0 !== P.isProcessing ? (P.isProcessing = !0, h.paymentOption.peers ? h.paymentOption.peers.ccCvc ? callDtrum("sendSessionProperties", [null, null, { fieldstype: "WEB_SDK_THREE_FIELDS" }, null]) : callDtrum("sendSessionProperties", [null, null, { fieldstype: "WEB_SDK_ONE_FIELDS" }, null]) : h.paymentOption.userPaymentOptionId ? callDtrum("sendSessionProperties", [null, null, { fieldstype: "WEB_SDK_UPO_PAYMENT" }, null]) : callDtrum("sendSessionProperties", [null, null, { fieldstype: "WEB_SDK_NOFIELDS" }, null]), h.billingAddress && h.billingAddress.email ? (callDtrum("sendSessionProperties", [null, null, { usertokenid: h.billingAddress.email }, null]), callDtrum("identifyUser", [h.billingAddress.email + " / " + b.merchantId])) : callDtrum("identifyUser", [UUIDjs.create().hex.split("-")[0] + " / " + b.merchantId]), h.sessionToken && callDtrum("sendSessionProperties", [null, null, { sessiontoken: h.sessionToken }, null]), v = this, h.openAmount ? this.setOpenAmount({ sessionToken: b.sessionToken, merchantId: b.merchantId, merchantSiteId: b.merchantSiteId, amount: h.openAmount, currency: h.currency, clientRequestId: h.clientRequestId || Math.ceil(1e16 * Math.random()), clientUniqueId: h.clientUniqueId }, function (e) { "ERROR" === e.status ? f(O(e)) : t() }) : t(), g = function () { !window.skipGetPaymentStatus || window.popupAPM && !window.popupAPM.closed || (P = {}) }) : f({ processingOrder: !0 })
                    }, initPayment: function (n, r) {
                        var o, e; n.paymentOption.card ? ((e = JSON.parse(JSON.stringify(n))).paymentOption.card.cardNumber = "**** **** **** ****", e.paymentOption.card.expirationMonth = "**", e.paymentOption.card.expirationYear = "**", e.paymentOption.card.CVV = "***", g.info("---\x3e initPayment input object\n" + JSON.stringify(e, null, 4))) : g.info("---\x3e initPayment input object\n" + JSON.stringify(n, null, 4)), g.trace("---\x3e TRACE initPayment \n"), n.paymentOption && n.paymentOption.__tokenize ? n.paymentOption.__tokenize(b, n, function (e) { r(e) }) : n && n.paymentOption && (o = new XMLHttpRequest, e = S + "/ppp/api/v1/cardTokenization.do", (n.paymentOption.userPaymentOptionId || n.paymentOption.useInitPayment) && (e = S + "/ppp/api/v1/websdk/initPaymentWithCardTokenization.do"), o.open("POST", e, !0), o.
                            setRequestHeader("Content-Type", "application/json;charset=UTF-8"), o.timeout = 6e4, o.onload = function () { if (callDtrum("leaveAction", [window.initPaymentId, Date.now()]), 200 !== o.status) return r(JSON.parse(o.responseText)); var t = q(o.responseText); if ("ERROR" === t.status) return t.error = { type: "card", code: t.errCode }, t.error.message = t.reason || "Process failed.", r(t); if ("SUCCESS" !== t.status) return r(t); var e = ""; if (t.paymentOption && t.paymentOption.card && t.paymentOption.card.threeD && t.paymentOption.card.threeD.version && (e = t.paymentOption.card.threeD.version), C = t.paymentOption.card.threeD.v2supported, websdk_core.onPaymentEvent({ eventType: "tokenized", threeD: { version: e } }, b.onPaymentEvent, k, C, T), t.transactionStatus && (n.transactionStatus = t.transactionStatus), t.transactionType && (n.transactionType = t.transactionType), t.transactionId && (n.transactionId = t.transactionId), !(t.paymentOption && t.paymentOption.card && t.paymentOption.card.threeD && t.paymentOption.card.threeD.v2supported && "true" === t.paymentOption.card.threeD.v2supported)) return r(t); e = t.paymentOption.card.threeD; if (n.paymentOption = t.paymentOption || {}, n.paymentOption.card = t.paymentOption.card || {}, n.paymentOption.card.threeD = t.paymentOption.card.threeD || {}, !e.methodUrl) return n.paymentOption.card.threeD.methodCompletionInd = "U", r(n); e.methodUrl && e.methodPayload && N(e.methodUrl, e.methodPayload, function (e) { return t.paymentOption.card.threeD.methodCompletionInd = e, r(t) }) }, o.
                                ontimeout = function () { return callDtrum("leaveAction", [window.initPaymentId, Date.now()]), r({ error: { type: "network", code: "connection_timeout", message: A } }) }, o.onerror = function () { callDtrum("leaveAction", [window.initPaymentId, Date.now()]), r({ status: "ERROR", type: "network", code: "connection_timeout", errorDescription: A }) }, n.sourceApplication = b.sourceApplication || "WEB_SDK", e = callDtrum("enterAction", ["initPayment_started/initPayment_complete", void 0, Date.now()]), window.initPaymentId = e, o.send(JSON.stringify(n)))
                    }, paymentFrame: M, getToken: function (e, t) {
                        var n = e; return t && t.billingAddress && t.billingAddress.email ? (callDtrum("sendSessionProperties", [null, null, { usertokenid: t.billingAddress.email }, null]), callDtrum("identifyUser", [t.billingAddress.email + " / " + b.merchantId])) : callDtrum("identifyUser", [UUIDjs.create().hex.split("-")[0] + " / " + b.merchantId]), e.peers && e.peers.ccCvc ? callDtrum("sendSessionProperties", [null, null, { fieldstype: "getToken_THREE_FIELDS" }, null]) : callDtrum("sendSessionProperties", [null, null, { fieldstype: "getToken_ONE_FIELDS" }, null]), g.trace("---\x3e TRACE sfc.getToken() \n"), {
                            then: function (e) {
                                if (t && t.sessionToken && (b.sessionToken = t.sessionToken), t && t.merchantSiteId && (b.merchantSiteId = t.merchantSiteId), !b.merchantSiteId)
                                    throw new Error("Merchant site id is mandatory."); if (!b.sessionToken) throw new Error("Session token is mandatory."); n.CVV && n.CVV.__tokenize ? ((t = t || {}).userPaymentOptionId = n.userPaymentOptionId, t.expirationMonth = n.expirationMonth, t.expirationYear = n.expirationYear, n.CVV.__tokenize(b, t, e)) : n.__tokenize(b, t, e)
                            }
                        }
                    }, setOpenAmount: function (e, t) { e.sessionToken = e.sessionToken || b.sessionToken, e.merchantId = e.merchantId || b.merchantId, e.merchantSiteId = e.merchantSiteId || b.merchantSiteId, setOrderAmount(S, e, t) }, submitWdRequest: function (t, n) {
                        if (!t.amount) throw new Error("The amount is missing or invalid."); if (!t.currency) throw new Error("The currency is missing or invalid."); var e, r = {
                            sessionToken: t.sessionToken || b.sessionToken, merchantId: t.merchantId || b.merchantId, merchantSiteId: t.merchantSiteId || b.merchantSiteId, userTokenId: t.userTokenId, userId: t.userId, userAccountId: t.userAccountId, userPMId: t.upoId, amount: t.amount, currency: t.currency, merchantUniqueId: t.merchantUniqueId,
                            merchantWDRequestId: t.merchantWDRequestId, userDetails: t.userDetails
                        }; "apmgw_PlayPlus" === t.paymentMethod && sightlineNuvei && sightlineNuvei.checkFields && (sightlineNuvei.checkFields(), r.userDetails && sightlineNuvei.sightlineParams && sightlineNuvei.sightlineParams.userDetails && (e = JSON.parse(JSON.stringify(r.userDetails)), r.userDetails = Object.assign(e, sightlineNuvei.sightlineParams.userDetails))); var o = new XMLHttpRequest; o.open("POST", S + "/ppp/api/v1/websdk/clientSubmitWdRequest.do", !0), o.setRequestHeader("Content-Type", "application/json;charset=UTF-8"), o.timeout = 6e4, o.onload = function () { var e; 200 === o.status ? (e = { result: (e = q(o.responseText)).status || "", wdRequestStatus: e.wdRequestStatus || "", errCode: e.errCode || "0", reason: e.reason || "", wdRequestId: e.wdRequestId || "", merchantWDRequestId: e.merchantWDRequestId || r.merchantWDRequestId || "", userAccountId: e.userAccountId || r.userAccountId || "", userId: e.userId || r.userId || "" }, n(e)) : n(q(o.responseText)) }, o.ontimeout = function () { n({ error: { status: "ERROR", type: "network", code: "connection_timeout", message: A } }) }, o.onabort = function () { n({ error: { status: "ERROR", type: "network", code: "connection_timeout", message: A } }) }, o.onerror = function () { n({ error: { status: "ERROR", type: "network", code: "connection_lost", message: A } }) }, "object" == typeof t && Object.keys(t).forEach(function (e) { j(e) && (r[e] = t[e]) }), o.send(JSON.stringify(r))
                    }
                }
        }, e.SafeCharge.removeEvents = function () { window.removeEventListener("message", m, !1) }, e.websdk = e.SafeCharge
}(window);